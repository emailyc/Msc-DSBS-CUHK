hihi = read.csv('hw3(2020)a.dat', header = TRUE, sep = '')
head(hihi)
hihi = read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
head(hihi)
dim(hihi)
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
summary(uscrime)
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
summary(teachers)
anyNA(teacher)
anyNA(teachers)
cor(teachers)
corrplot(teachers, method="number")
library(corrplot)
library(corrplot)
library(corrplot)
corrplot(teachers, method="number")
sapply(teachers, anyNA)
corrplot(teachers)
colnames(teachers)
length(teachers)
sapply(as.matrix(teachers), anyNA)
corrplot(as.matrix(teachers), method="number")
as.matrix(teachers)
hihi = as.matrix(teachers)
corrplot(hihi, method="number")
corrplot(cor(teachers), method="number")
corrplot(cor(teachers), method="lower")
pcaCharts <- function(x) {
x.var <- x$sdev ^ 2
x.pvar <- x.var/sum(x.var)
print("proportions of variance:")
print(x.pvar)
par(mfrow=c(2,2))
plot(x.pvar,xlab="Principal component", ylab="Proportion of variance explained", ylim=c(0,1), type='b')
plot(cumsum(x.pvar),xlab="Principal component", ylab="Cumulative Proportion of variance explained", ylim=c(0,1), type='b')
screeplot(x)
screeplot(x,type="l")
par(mfrow=c(1,1))
}
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
# matrix of the p-value of the correlation
p.mat <- cor.mtest(mtcars)
head(p.mat[, 1:5])
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
# matrix of the p-value of the correlation
p.mat <- cor.mtest(teachers)
head(p.mat[, 1:5])
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
# matrix of the p-value of the correlation
p.mat <- cor.mtest(teachers)
head(p.mat[, 1:5])
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(teachers, method="color", col=col(200),
type="lower", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
# matrix of the p-value of the correlation
p.mat <- cor.mtest(teachers)
head(p.mat[, 1:5])
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(teachers), method="color", col=col(200),
type="lower", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
corrplot(cor(teachers), method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
corrplot(cor(teachers), method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
pmat
p.mat
n <- nrow(teachers)
p <- ncol(teachers)
ratio <- n/p
ratio
bartlett <- psych::cortest.bartlett(teachers)
bartlett
kmo
kmo <- psych::KMO(teachers)
kmo
kmo$MSA
#Principle Component using non-centered, non-scaled datas
teachers_pca <- prcomp(teachers)
names(teachers_pca)
teachers_pca
summary(teachers_pca)
pcaCharts(teachers_pca)
psych::fa.parallel(teachers)
psych::fa.parallel(teachers, fa = 'pc)
psych::fa.parallel(teachers, fa = "pc")
psych::fa.parallel(teachers, fa = "pc")
psych::fa.parallel(x = teachers, fa = "pc", nfactors = 10)
#Principle Component using non-centered, non-scaled datas
teachers_pca <- prcomp(teachers)
names(teachers_pca)
#Principle Component using non-centered, non-scaled datas
teachers_pca <- prcomp(teachers)
names(teachers_pca)
teachers_pca
summary(teachers_pca)
pcaCharts(uscrime_pca)
pcaCharts(teachers_pca)
pcfa <- psych::principal(r = teachers, nfactors = 2, rotate = "none")
pcfa_load <- pcfa$loadings[1:ncol(teachers),]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi) pcfa_tbl
pcfa <- psych::principal(r = teachers, nfactors = 2, rotate = "none")
pcfa_load <- pcfa$loadings[1:ncol(teachers),]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
mlm <- psych::fa(teachers, nfactors = 2, rotate = "none", fm="ml")
mlm_load <- mlm$loadings[1:ncol(teachers),]
mlm_com <- mlm$communalities
mlm_psi <- mlm$uniquenesses
mlm_tbl <- cbind(mlm_load, mlm_com, mlm_psi)
mlm_tbl
mlm$Vaccounted
mlm$loadings[1:p,]
mlm$loadings[:p,]
mlmv <- psych::fa(teachers, nfactors = 2, rotate = "varimax", fm="ml")
mlmv_load <- mlmv$loadings[1:p,]
mlmv_com <- mlmv$communalities
mlmv_psi <- mlmv$uniquenesses
mlmv_tbl <- cbind(mlmv_load, mlmv_com, mlmv_psi)
mlmv_tbl
mlmv$Vaccounted
pcaCharts <- function(x) {
x.var <- x$sdev ^ 2
x.pvar <- x.var/sum(x.var)
print("proportions of variance:")
print(x.pvar)
par(mfrow=c(2,2))
plot(x.pvar,xlab="Principal component", ylab="Proportion of variance explained", ylim=c(0,1), type='b')
plot(cumsum(x.pvar),xlab="Principal component", ylab="Cumulative Proportion of variance explained", ylim=c(0,1), type='b')
screeplot(x)
screeplot(x,type="l")
par(mfrow=c(1,1))
}
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
library("knitr")
opts_chunk$set(echo = TRUE, cache=TRUE, message=FALSE, warning = FALSE)
options(width = 100)
library("ggplot2")
library("GGally")
library("dplyr")
# import data
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
# matrix of the p-value of the correlation
p.mat <- cor.mtest(teachers)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(teachers), method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
bartlett <- psych::cortest.bartlett(teachers)
bartlett
kmo <- psych::KMO(teachers)
kmo
n <- nrow(teachers)
p <- ncol(teachers)
ratio <- n/p
#Principle Component using non-centered, non-scaled datas
teachers_pca <- prcomp(teachers)
names(teachers_pca)
teachers_pca
summary(teachers_pca)
pcaCharts(teachers_pca)
psych::fa.parallel(x = teachers, fa = "pc", nfactors = 10)
pcfa <- psych::principal(r = teachers, nfactors = 2, rotate = "none")
pcfa_load <- pcfa$loadings[1:p,]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
mlm <- psych::fa(teachers, nfactors = 2, rotate = "none", fm="ml")
mlm_load <- mlm$loadings[1:p,]
mlm_com <- mlm$communalities
mlm_psi <- mlm$uniquenesses
mlm_tbl <- cbind(mlm_load, mlm_com, mlm_psi)
mlm_tbl
mlm$Vaccounted
mlmv <- psych::fa(teachers, nfactors = 2, rotate = "varimax", fm="ml")
mlmv_load <- mlmv$loadings[1:p,]
mlmv_com <- mlmv$communalities
mlmv_psi <- mlmv$uniquenesses
mlmv_tbl <- cbind(mlmv_load, mlmv_com, mlmv_psi)
mlmv_tbl
mlmv$Vaccounted
pcfa <- psych::principal(r = teachers, nfactors = 2, rotate = "varimax")
pcfa_load <- pcfa$loadings[1:7,]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
pcfa$Vaccounted
pcaCharts <- function(x) {
x.var <- x$sdev ^ 2
x.pvar <- x.var/sum(x.var)
print("proportions of variance:")
print(x.pvar)
par(mfrow=c(2,2))
plot(x.pvar,xlab="Principal component", ylab="Proportion of variance explained", ylim=c(0,1), type='b')
plot(cumsum(x.pvar),xlab="Principal component", ylab="Cumulative Proportion of variance explained", ylim=c(0,1), type='b')
screeplot(x)
screeplot(x,type="l")
par(mfrow=c(1,1))
}
# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
library("knitr")
opts_chunk$set(echo = TRUE, cache=TRUE, message=FALSE, warning = FALSE)
options(width = 100)
library("ggplot2")
library("GGally")
library("dplyr")
# import data
teachers <- read.csv('hw3(2020)a.dat', header = FALSE, sep = '')
# matrix of the p-value of the correlation
p.mat <- cor.mtest(teachers)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(teachers), method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
bartlett <- psych::cortest.bartlett(teachers)
bartlett
kmo <- psych::KMO(teachers)
kmo
n <- nrow(teachers)
p <- ncol(teachers)
ratio <- n/p
#Principle Component using non-centered, non-scaled datas
teachers_pca <- prcomp(teachers)
names(teachers_pca)
teachers_pca
summary(teachers_pca)
pcaCharts(teachers_pca)
psych::fa.parallel(x = teachers, fa = "pc", nfactors = 10)
pcfa <- psych::principal(r = teachers, nfactors = 2, rotate = "none")
pcfa_load <- pcfa$loadings[1:p,]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
mlm <- psych::fa(teachers, nfactors = 2, rotate = "none", fm="ml")
mlm_load <- mlm$loadings[1:p,]
mlm_com <- mlm$communalities
mlm_psi <- mlm$uniquenesses
mlm_tbl <- cbind(mlm_load, mlm_com, mlm_psi)
mlm_tbl
mlm$Vaccounted
mlmv <- psych::fa(teachers, nfactors = 2, rotate = "varimax", fm="ml")
mlmv_load <- mlmv$loadings[1:p,]
mlmv_com <- mlmv$communalities
mlmv_psi <- mlmv$uniquenesses
mlmv_tbl <- cbind(mlmv_load, mlmv_com, mlmv_psi)
mlmv_tbl
mlmv$Vaccounted
pcfa <- psych::principal(r = teachers, nfactors = 2, rotate = "varimax")
pcfa_load <- pcfa$loadings[1:p,]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
pcfa$Vaccounted
# matrix of the p-value of the correlation
p.mat <- cor.mtest(teachers)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot:corrplot(cor(teachers), method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
pcfav <- psych::principal(r = teachers, nfactors = 2, rotate = "varimax")
pcfav_load <- pcfav$loadings[1:p,]
pcfav_com <- pcfav$communality
pcfav_psi <- pcfav$uniquenesses
pcfav_tbl <- cbind(pcfav_load, pcfav_com, pcfav_psi)
pcfav_tbl
pcfav$Vaccounted
