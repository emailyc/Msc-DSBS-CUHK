(9/2)+.5
.5%*%matrix(c(1,-1,-1,3),2) %*% c(5,2)
matrix(c(1,-1,-1,3),2) %*% c(5,2)
1/sqrt(2) %*% matrix(c(1,1,-1,1),2)
c(1/sqrt(2)) %*% matrix(c(1,1,-1,1),2)
c(1/sqrt(2)) * matrix(c(1,1,-1,1),2)
.5*matrix(c(1,-1,-1,3),2) %*% c(5,2)
det(matrix(c(1,1,-1,1),2))
det(c(1/sqrt(2)) * matrix(c(1,1,-1,1),2))
solve(matrix(c(3,1,1,1),2))
(.5*matrix(c(3,-1,-1,1),2)) %*% ((1/sqrt(2)) * matrix(c(2,4,0,2),2)))
(.5*matrix(c(3,-1,-1,1),2)) %*% ((1/sqrt(2)) * matrix(c(2,4,0,2),2))
q5 = matrix(c(1,0,0,1,-((4/13) /(-12/13)), -((-3/13) / (-12/13))))
q5
q5 = matrix(c(1,0,0,1,-((4/13) /(-12/13)), -((-3/13) / (-12/13))), 2)
q5
q5%*%c(6,2,3)
q5%*%matrix(c(5,4,9,-1,-4,3,-3,1,0,7,-2,12), 3,4)
q5%*%c(5,4,9)
eigenbasis = matrix(c(1,0,-1,1),2)
matrix(c(3,0,1,2), 2) %*% eigenbasis
solve(eigenbasis) matrix(c(3,0,1,2), 2) %*% eigenbasis
solve(eigenbasis) %*% matrix(c(3,0,1,2), 2) %*% eigenbasis
result = solve(eigenbasis) %*% matrix(c(3,0,1,2), 2) %*% eigenbasis
result^100
solve(eigenbasis) %*% result^100
eigenbasis %*% result^100
T = matrix(c(1,0,1,2),2)
C = matrix(c(1,0,1,1),2)
solve(C) %*% T %*% C
C %*% T %*% solve(C)
C %*% T^2 %*% solve(C)
solve(C) %*% T^2 %*% C
T = matrix(c(6,2,-1,3),2)
C = matrix(c(1,1,1,2),2)
solve(C) %*% T %*% C
T = matrix(c(2,0,7,-1),2)
C = matrix(c(7, -3, 1,0),2)
solve(C) %*% T %*% C
T = matrix(c(1,2,0,-1),2); C = matrix(c(1,1,0,1),2); solve(C) %*% T %*% C
solve(matrix(c(1,0,2,1), ))
solve(matrix(c(1,0,2,1), 2))
matrix(c(6,2,-1,3),2)^3
D = matrix(c(5,0,0,4), 2)
D
D^3
matrix(c(2,-1,-1,1), 2)  %*% D^3 %*% matrix(c(1,1,1,2), 2)
matrix(c(1,1,1,2), 2)  %*% D^3 %* %matrix(c(2,-1,-1,1), 2)
matrix(c(1,1,1,2), 2)  %*% D^3 %*% matrix(c(2,-1,-1,1), 2)
matrix(c(6,2,-1,3),2)
matrix(c(2, 0, 7, -1), 2)  %*% matrix(c(-1, 0,0, 2), 2) %*% matrix(c(0, 1, -1/3, 7/3), 2)
matrix(c(2, 0, 7, -1), 2)  %*% matrix(c(-1, 0,0, 2), 2)^3 %*% matrix(c(0, 1, -1/3, 7/3), 2)
matrix(c(7, -3, 1, 0), 2)  %*% matrix(c(-1, 0,0, 2), 2)^3 %*% matrix(c(0, 1, -1/3, 7/3), 2)
matrix(c(1, 1, 0, 1), 2)  %*% matrix(c(1, 0, 0, -1), 2)^3 %*% matrix(c(1, -1, 0, 1), 2)
solve(matrix(c(1, 1, 0, 1), 2))
matrix(c(1, 2, 0, -1), 2)^3
matrix(c(1, 2, 0, -1), 2)^5
matrix(c(1, 2, 0, -1), 2)**5
matrix(c(1, 2, 0, -1), 2)%^%5
library(expm)
install.packages("expm")
matrix(c(1, 2, 0, -1), 2)%^%5
library(expm)
matrix(c(1, 2, 0, -1), 2)%^%5
detach("package:expm", unload=TRUE)
matrix(c(1, 2, 0, -1), 2)%*%5
det(matrix(c(0, 1, 1, 0), 2))
det(matrix(c(0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0), 4))
eigen(matrix(c(0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0), 4))
matrix(c(0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0), 4)
e <- eigen(matrix(c(0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0), 4))
e$values
det(matrix(c(0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0), 4))
e$vectors
e
e5 = eige(matrix(c(0.1,.7,0.1,0.1,.7,0.1,0.1,0.1,0.1,0.1,0.1,.7,0.1,0.1,.7,0.1), 4))
e5 = eigen(matrix(c(0.1,.7,0.1,0.1,.7,0.1,0.1,0.1,0.1,0.1,0.1,.7,0.1,0.1,.7,0.1), 4))
e5
(3/4) - (.5)
eigen(matrix(c(1.5, -.5, -1, .5), 2))
1-(sqrt(3)/2)
1+(sqrt(3)/2)
1-(sqrt(5)/2); 1+(sqrt(5)/2)
-1 - sqrt(3)
-1 + sqrt(3)
1 + sqrt(3); 1 - sqrt(3)
1 - sqrt(5); 1 + sqrt(5)
-1 - sqrt(5); -1 + sqrt(5)
matrix(c(1.5, -.5, -1, .5), 2)
e8 = eigen(matrix(c(1.5, -.5, -1, .5), 2))
e8
e8 = eigen(matrix(c(3/2, -1/2, -1, 1/2), 2))
e8
zapsmall(crossprod(e8$vectors))
1-(sqrt(5)/2)
1+(sqrt(5)/2)
-1-(sqrt(5)/2); -1+(sqrt(5)/2)
-1-(sqrt(3)/2); -1+(sqrt(3)/2)
1-(sqrt(3)/2); 1+(sqrt(3)/2)
crossprod(e8$vectors)
library("expm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
matrix(c(3/2, -1/2, -1, 1/2), 2) %*% 2
matrix(c(3/2, -1/2, -1, 1/2), 2) %^% 2
11/4
1 + 3/
4
1 + 5/4
(1 + sqrt(3)/2)^2
(-1 - sqrt(3)/2)^2
(-1 - (sqrt(3)/2))^2
(-1 - (sqrt(5)/2))^2
(1 - (sqrt(5)/2))^2
A = matrix(c(3/2, -1/2, -1, 1/2), 2)
solve(e8)
e8
1-sqrt(3)
1+sqrt(3)
-1-sqrt(3)
1 + sqrt(3)/2
1 - sqrt(3)/2
-1-sqrt(3)
-1+sqrt(3)
1-sqrt(3)
1+sqrt(3)
1-sqrt(5); 1+sqrt(5); -1-sqrt(5); -1+sqrt(5)
A1 = matrix(c(4,7,1.5,-5,-8,-.5,6,6,-2), 3)
eigen(A1)
1.5- (1-(sqrt(3)/2))
A
eigen(A)
(-1-sqrt(3))/0.9390708
0.9390708/-0.3437238
(-1+sqrt(3))/0.9390708
0.5906905/0.8068982
0.8068982/0.5906905
1/(-1-sqrt(3))
1/(-1+sqrt(3))
1/(1-sqrt(5)); 1/(1+sqrt(5))
1/(-1-sqrt(5)); 1/(-1+sqrt(5))
(-1-sqrt(3))
(1-sqrt(3))
(-1+sqrt(3))
1/(-1+sqrt(3))
q4 = function(x)3*x**2 + (2/3)*x
q595
q4(5)
235/3
q5 = function(x)3*x**2 + 54*x - 5
q5(-1)
2^-.5
0.7071068*0.7071068
100^-.5
100^.5
1/(2*sqrt(100))
1/(2*sqrt(10))
1/(2*sqrt(100))
100^-.5
1/(sqrt(100))
100/sqrt(100)
4/sqrt(4)
matrix(c(.5, 0, -1, 3/4), 2) %*% c(-2, 4)
A = matrix(c(1 , -1/3, -1/3, 0,  1 ,  -1/2, 0,  0 ,  1 ), 3)
A%*%c(15, 28,23)
A1 = mtrix(c(-1.5, 0.5, 0.5, 2, 0, -1, .5, -.5, .5), 3)
A1 = matrix(c(-1.5, 0.5, 0.5, 2, 0, -1, .5, -.5, .5), 3)
c(15, 28,23) %*% solve(A1)
solve(A1)%*%c(15, 28,23)
A1 = matrix(c(1,1,1, 3,2,1, 2,1,2), 3)
solve(A1) %*% c(15, 28,23)
c(15, 28,23) %*% solve(A1)
matrix(c(-1.5, 0.5, 0.5, 2, 0, -1, .5, -.5, .5), 3) %*% c(3,7,5)
A = matrix(c(-1.5, 2, 0.5, .5, 0, -.5, .5, -1, .5), 3)
A %*% c(3,7,5)
A
solve(A )%*% c(15, 28,23)
c(15, 28,23) %*% solve(A)
A %*% c(145, 94, 89)
solve(A)%*%c(15, 28,23)
A5 = matrix(c(1, 0, 0, -1/3, 1, 0, -1/3, -1/2, 1), 3)
A5
total = c(15, 28, 23)
total = c(15*(-2/3) , (28+(-2*15*(-2/3)))*1.5, 2*(23+(-.5*15*(-2/3)))+((28+(-2*15*(-2/3)))*1.5)/3  )
total
total = c(15, 28, 23)
total[1] = total[1]*(-2/3)
total[2] = total[2]+total[1]*-2
total[3] = total[3]+total[1]*-.5
total[2] = total[2]*1.5
total[3] = total[3]+(total[2] /3)
total[3] = total[3]*2
total
A
solve(A)%*%c(-10 , 72, 104)
c(-10 , 72, 104)%*%solve(A)
solve(A)
A
A
A5
solve(A5)%*%c(-10 , 72, 104)
c(-10 , 72, 104)%*%solve(A5)
matrix(c(1,3,2,1,2,1, 1,1,2), 3)
solve(matrix(c(1,3,2,1,2,1, 1,1,2), 3))%*%c(15, 28,23)
matrix(c(1,3,2,1,2,1, 1,1,2), 3) %*%c(3,7,5)
A5
A5%*%c(3,7,5)
solve(matrix(c(1,3,2,1,2,1, 1,1,2), 3))
A = [[-1.5, 0.5, 0.5],
[2, 0, -1],
[.5, -.5, .5]]
s = [15, 28,23]
# Replace A and s with the correct values below:
A = [[ 1 , -1/3, -1/3],
[ 0,  1 ,  -1/2],
[ 0,  0 ,  1  ]]
s = [-1, 4.5, 5]
s = [3,7,5]
Ainv = [[-1.5, .5, .5],
[2, 0, -1],
[0.5, -0.5, 0.5]]
matrix(c(1,0,0,1,1,0,1,2,1), 3) %*% c(3,7,5)
matrix(c(1,0,0,1,1,0,1,2,1), 3)
read.csv('/Users/Dants/Downloads/BlobExperiment/data/ThisisrunningPHP_507753_LowSimilarity_interleaved.csv')
hihi = read.csv('/Users/Dants/Downloads/BlobExperiment/data/ThisisrunningPHP_507753_LowSimilarity_interleaved.csv')
View(hihi)
H = matrix(c(1,1,1,1), 2)
H
.5 * c(4, 5) %*% H %*% c(4, 5)
(.5 * c(4, 5)) %*% (H %*% c(4, 5))
(.5 * c(1, 1)) %*% (H %*% c(1, 1))
(.5 * c(1, 2)) %*% (H %*% c(1, 2))
(.5 * c(1, 3)) %*% (H %*% c(1, 3))
.5 * (c(1, 3) %*% (H %*% c(1, 3)))
cos(pi)
sin(pi)
cos(pi)
cos(0)
hihi = read.csv('/Users/Dants/Downloads/BlobExperiment/data/ThisisrunningPHP_507753_LowSimilarity_interleaved.csv')
View(hihi)
x = mean(c(.4, .5, .6, .7, .8))
x
y = mean(c(.1, .25, .55, .75, .85))
y
(c(.4, .5, .6, .7, .8)-x)*c(.1, .25, .55, .75, .85)
sum((c(.4, .5, .6, .7, .8)-x)*c(.1, .25, .55, .75, .85))
.2/sum((c(.4, .5, .6, .7, .8)-x)^2)
.2/2
m = .1
c = y - m*x
c
x
(c(.4, .5, .6, .7, .8)-x)*c(.1, .25, .55, .75, .85)
c(.4, .5, .6, .7, .8)-x
(c(.4, .5, .6, .7, .8)-x)^2
sum((c(.4, .5, .6, .7, .8)-x)^2)
.2/.1
2/.1
(c(.4, .5, .6, .7, .8)-x)*c(.1, .25, .55, .75, .85)
sum((c(.4, .5, .6, .7, .8)-x)*c(.1, .25, .55, .75, .85))
sum((c(.4, .5, .6, .7, .8)-x)^2)
sum((c(.4, .5, .6, .7, .8)-x)*c(.1, .25, .55, .75, .85))/sum((c(.4, .5, .6, .7, .8)-x)^2)
y - 2*x
# GRADED FUNCTION
# This is the Gaussian function.
def f (x,mu,sig) :
return np.exp(-(x-mu)**2/(2*sig**2)) / np.sqrt(2*np.pi) / sig
# Next up, the derivative with respect to μ.
# If you wish, you may want to express this as f(x, mu, sig) multiplied by chain rule terms.
# === COMPLETE THIS FUNCTION ===
def dfdmu (x,mu,sig) :
return f(x, mu, sig) * ((x - mu) / sig**2)
# Finally in this cell, the derivative with respect to σ.
# === COMPLETE THIS FUNCTION ===
def dfdsig (x,mu,sig) :
return (-1/(sig**2 * np.sqrt(2*np.pi)) * np.exp(-(x-mu)**2/(2*sig**2))
+ f(x, mu, sig) * ((x-mu)**2 / sig**3)
)
var(c(1,2,3,2))
1/3
2/3
sd(c(1,2,3,2))
var(c(1,2,3,2) + 1)
c(1,2,3,2) + 1
var(c(1,2,3,2) * 2)
2+(2/3)
2.666667/0.6666667
hihi = c(1,2,3,2)
n = length(hihi)
(n-1)/n * var(hihi) + (1/n)*(4-mean(hihi))^2
var(c(1,2,3,2, 4))
q5 = var(c(1,2,3,2, 4))
q5 == (n-1)/n * var(hihi) + (1/n)*(4-mean(hihi))*(4-mean(c(1,2,3,2, 4)))
var(matrix(c(1,2,3,4), 2))
var(matrix(c(1,2,8,4), 2))
var(c(1,2,3,2, 4))
cov(matrix(1,2,5,4), 2)
cov(matrix(1,2,5,4))
cov(matrix(c(1,2,5,4)), 2)
cov(matrix(c(1,2,5,4), 2))
cov(matrix(c(1,5,2,4), 2))
cov(c(1,2), c(5,4))
matrix(c(1,2,5,4), 2)
var(c(1,2))
var(c(1,5))
cov(matrix(1,2,5,4))
matrix(c(1,2,5,4))
matrix(c(1,2,5,4), 2)
(1-1.5)*(5-4.5)
var(c(1,5))
var(c(1,2))
var(c(4, 4.2, 3.9, 4.3, 4.1))
var(c(1,2))
var(c(5,4))
(1-1.5)^2 + (2-1.5)^2
0.5/2
(1-1.5)^2 * (2-1.5)^2
cov(matrix(c(1,1,1,1,1,2,3,4,1,1,2,3), 4))
cov(matrix(c(2,3,4,7), 2))
var(1,2)
.5^2 + .5^2
0.5/2
mean(c(1,2))
((1-1.5)^2 + (2-1.5)^2)/2
((2-3)^2 + (4-3)^2)/2
((2-3)^2 + (4-3)^2)/1
var(c(1,5))
((1-3)^2 + (5-3)^2)/1
((1-3)^2 + (5-3)^2)/2
(3-5)^2 + (7-5)^2
var(matrix(c(1,5,2,4), 2))
((1-3)^2 + (5-3)^2)
((1-3)^2 + (5-3)^2)/2
4/3
mean(c(-2, 4, 6))
mean(c(-1, 1))
mean(c(1, 2))
mean(c(1, 2)*2)
mean(c(1, -2))
mean(c(1, -2)*2)
sqrt91
sqrt(1)
2*sqrt(5)
sqrt(2)
c(1,2) %*% c(2,1)
c(3,4) %*% c(-1,-1)
-7/(sqrt(9+16) * sqrt(2))
cos(-7/(sqrt(9+16) * sqrt(2)))
acos(-7/(sqrt(9+16) * sqrt(2)))
sqrt(13)
c(1,2,3) %*% c(-1,0,8)
23/(sqrt(1+4+9) * sqrt(1+64))
acos(23/(sqrt(1+4+9) * sqrt(1+64)))
sqrt(14)
acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
a = c(3,4); b = c(-1,-1)
acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
a = c(1,2,3); b = c(-1,0,8);acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
a = c(1,2,3); b = c(1,2,3)-c(-1,0,8);acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
A <- matrix(c(1,2,3,2,1,2,3,2,1), 3, 3)
A
eigen(A)
P <- eigen(A)$vectors
D <- diag(eigen(A)$values)
P %*% D %*% solve(P)
setwd("C:/Users/YiuChung/Google Drive/2018R1 High-Dimensional Data Analysis (STAT5103)/Assignment/1")
crime <- readxl::read_excel("uscrime.xlsx", sheet = 1, skip = 1)
sapply(crime[, 3:9], mean)
View(crime)
sapply(crime, class)
data_url = "https://blackboard.cuhk.edu.hk/bbcswebdav/pid-2587371-dt-content-rid-13739926_1/xid-13739926_1"
car = read.csv(data_url, header = FALSE, sep = "\t", na.strings = c("NaN", "Nan"))
data_url = "https://s3-ap-southeast-1.amazonaws.com/learn-ap-southeast-1-prod-fleet02-xythos/593a61e7aa84f/3406258?response-content-disposition=inline%3B%20filename%2A%3DUTF-8%27%27carc.txt&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20180919T153912Z&X-Amz-SignedHeaders=host&X-Amz-Expires=21600&X-Amz-Credential=AKIAJDDBGKVKR5QVHNHA%2F20180919%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=de59a37854622816c8bff38cdeee060375ccec85fab4cec74df6c8fc3ec4389d"
car = read.csv(data_url, header = FALSE, sep = "\t", na.strings = c("NaN", "Nan"))
car = car[,-c(3, 4, 13)]
names = c("Price", "Mileage", "Headroom", "Rear", "Trunk", "Weight", "Length", "Turning_diameter", "Displacement", "Gear_ratio")
names(car) = names
summary(car)
nrow(car[anyNA(car)==T,])
anyNA(car)
View(car)
sapply(car, anyNA)
data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
require("knitr")
opts_chunk$set(echo = TRUE, cache=TRUE, message=FALSE, warning = FALSE)
options(width = 100)
require("ggplot2")
require("GGally")
data_url = "https://s3-ap-southeast-1.amazonaws.com/learn-ap-southeast-1-prod-fleet02-xythos/593a61e7aa84f/3406258?response-content-disposition=inline%3B%20filename%2A%3DUTF-8%27%27carc.txt&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20180919T153912Z&X-Amz-SignedHeaders=host&X-Amz-Expires=21600&X-Amz-Credential=AKIAJDDBGKVKR5QVHNHA%2F20180919%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=de59a37854622816c8bff38cdeee060375ccec85fab4cec74df6c8fc3ec4389d"
car = read.csv(data_url, header = FALSE, sep = "\t", na.strings = c("NaN", "Nan"))
car = car[,-c(3, 4, 13)]
names = c("Price", "Mileage", "Headroom", "Rear", "Trunk", "Weight", "Length", "Turning_diameter", "Displacement", "Gear_ratio")
names(car) = names
summary(car)
my_lm <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point(size = 3) +
geom_smooth(method=loess, fill="red", color="red", size=3, ...) +
geom_smooth(method=lm, fill="blue", color="blue", size=3, ...)
p
}
g <- ggpairs(
car,
columns=1:10 ,
upper = list(continuous = wrap("cor", size = 14)),
lower = list( continuous = my_lm)
)
g <- g + ggtitle("Car Dataset Correlation Matrix") +
theme(plot.title = element_text(lineheight=.8,
face="bold",
size = 40),
axis.title.x = element_text(size = 20))
g
sum_stat <- psych::describe(car$Price)
sum_stat
full_model = lm(data = car, Price ~ .)
full_coef = paste(round(coef(full_model), 2))
null_model <- lm(data = car, Price~1)
anova(null_model, full_model)
summary(full_model)$coef
#Coefficients with p-value < .05
data.frame(summary(full_model)$coef[summary(full_model)$coef[,4] <= .05, 4])
summary(full_model)$adj.r.squared
model_partial = lm(data = car, Price ~ . )
step_model <- MASS::stepAIC(model_partial,
direction = "both",
trace = FALSE)
AIC(step_model)
step_coef = paste(round(coef(full_model), 2))
null_model2 <- lm(data = car, Price~1)
anova(null_model2, step_model)
data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
summary(step_model)$adj.r.squared
data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
data.frame(round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4]), 2)
data.frame(round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4]), 3)
data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4]
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4], 2)
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4], 5)
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4], 6)
data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
sig_coef = summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4]
formatC(sig_coef, format = "e", digits = 2)
#round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4], 6)
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
sig_coef <- summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame(.)
library(dplyr)
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
sig_coef <- summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame(.)
#round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4], 6)
#data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
sig_coef <- summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame(.)
sig_coef
#round(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4], 6)
summary(step_model)$coef[,4] <= .05 %>%
summary(step_model)$coef[., 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame(.)
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame(.)
anova(null_model, step_model)
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4]
data.frame(summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4])
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame(Sigificant Coefficients = .)
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
summary(step_model)$coef
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
summary(step_model)$coef
sig_coef <- summary(step_model)$coef[,4] <= .05 %>%
summary(step_model)$coef[., 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
sig_coef
summary(step_model)$coef[,4] <= .05
sig_coef <- summary(step_model)$coef[,4] <= .05 %>%
summary(step_model)$coef[., 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
sig_coef <- summary(step_model)$coef[,4] <= .05
sig_coef
summary(step_model)$coef[sig_coef, 4]
summary(step_model)$coef
sig_coef <- summary(step_model)$coef[,4] <= .05 %>%
summary(step_model)$coef[., 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
summary(step_model)$coef[,4]
summary(step_model)$coef
sig_coef <- unname(summary(step_model)$coef[,4]) <= .05 %>%
summary(step_model)$coef[., 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
summary(step_model)$coef
summary(step_model)$coef[summary(step_model)$coef[,4] <= .05, 4] %>%
formatC(., format = "e", digits = 2) %>%
data.frame("Sigificant Coefficients" = .)
