samples
means <- colMeans(samples)
ggplot(as.data.frame(means = means), aes(x = means)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
as.data.frame(means)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- colMeans(samples)
ggplot(as.data.frame(means), aes(x = means)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- colMeans(samples)
hist(means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means), col = "darkblue", lwd = 2)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- as.data.frame(colMeans(samples))
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- as.data.frame(sample_means = colMeans(samples))
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
means$sample_means
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram()
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram()
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = sqrt(15))
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = 3)
g
hist(means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means), col = "darkblue", lwd = 2)
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = 2)
g
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = 1)
g
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = 4)
g
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = 2.5)
g
g
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
ggplot(data = means, aes(sample_means)) + geom_histogram(binwidth = 2)
means
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) +
geom_histogram(binwidth = 2.5) +
scale_x_continuous(limits = c(0,12))
g
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) +
geom_histogram(binwidth = 2.5) +
scale_x_continuous(expand = c(0, 0), limits = c(0,12))
g
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(expand = c(0, 0), limits = c(0,12))
g
g
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(means$sample_means, col = "darkblue", lwd = 2)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
ggplot(means) +
geom_histogram(breaks=breaks,aes(x=vector,y=..density..), position="identity") +
geom_density(aes(x=vector,y=..density..))
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
ggplot(means) +
geom_histogram(aes(x=vector,y=..density..), position="identity") +
geom_density(aes(x=vector,y=..density..))
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
ggplot(means) +
geom_histogram(aes(x=sample_means,y=..density..), position="identity") +
geom_density(aes(x=vector,y=..density..))
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
ggplot(means) +
geom_histogram(aes(x=sample_means,y=..density..), position="identity") +
geom_density(aes(x=sample_means,y=..density..))
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
ggplot(means) +
geom_histogram(aes(breaks=0, x=sample_means,y=..density..), position="identity") +
geom_density(aes(x=sample_means,y=..density..))
density(means$sample_means)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(expand = c(0, 0), limits = c(2,12))
g
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
g <- ggplot(data = means, aes(sample_means)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(2,12))
g
density(means$sample_means)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
abline(v=mean(means$sample_means), col="blue")
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
abline(v=mean(means$sample_means), col="black")
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
abline(v=mean(means$sample_means), col="black")
q2 <- c(mean(population), mean(means$sample_means))
names(q2) <- c("Population Mean", "Sample Mean")
population <- c(1,5,6,8,8,15)
samples <- combn(population, 2)
samples
means <- data.frame(sample_means = colMeans(samples))
hist(means$sample_means, main = "", xlab = "Sample Means", prob = T, col = "darkred")
lines(density(means$sample_means), col = "darkblue", lwd = 2)
abline(v=mean(means$sample_means), col="black")
q2 <- c(mean(population), mean(means$sample_means))
names(q2) <- c("Population Mean", "Sample Mean")
q2
mu <- 3.10
sigma <- 0.40
n <- 16
pnorm(q = 3, mean = mu, sd = sigma, lower.tail = FALSE)
pnorm(q = 3, mean = 3.10, sd = 0.40 / sqrt(16), lower.tail = FALSE)
qnorm(p = .85, mean = 3.10, sd = 0.40 / sqrt(16))
qnorm(p = .85, mean = 3.10, sd = 0.40 / sqrt(64))
sd <- sqrt(0.15*(1 - 0.15)/200)
mu <- 0.15
pnorm(q = 0.15, mean = mu, sd = sd)
sd <- sqrt(0.15*(1 - 0.15)/200)
mu <- 0.15
pnorm(q = 0.17, mean = mu, sd = sd) - pnorm(q = 0.13, mean = mu, sd = sd)
qnorm(.975)
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - P) / 326)
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - P) / 326)
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - p) / 326)
p + (-1, 1) * z_value * se
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - p) / 326)
p + c * z_value * se
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - p) / 326)
p + c(-1, 1) * z_value * se
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - p) / 326)
p + c(-1, 1) * z_value * se
percent(.5)
p <- 303/326
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - p) / 326)
CI <- p + c(-1, 1) * z_value * se
CI
p <- 303/326
e <- 0.04
z_value <- qnorm(p = .975)
se <- sqrt(p * (1 - p) / 326)
p * (1 - P) / (e/z_value)^2
p <- 303/326
e <- 0.04
z_value <- qnorm(p = .975)
p * (1 - P) / (e/z_value)^2
p <- 303/326
e <- 0.04
z_value <- qnorm(p = .975)
p * (1 - p) / (e/z_value)^2
(z_value^2 * p * (1 - p))/e^2
round(157.4387)
p <- 303/326
e <- 0.04
z_value <- qnorm(p = .975)
n <- p * (1 - p) / (e/z_value)^2
ceiling(n)
(z_value^2 *(p*(1-p)))/e^2
1-.99
0.01/2
1-0.005
x_bar <- 0.995
e <- 0.02
z_value <- qnorm(p = 0.995)
n <- 50
x_bar + c(-1, 1) * z_value * e/sqrt(n)
x_bar <- 0.995
e <- 0.02
z_value <- qnorm(p = 0.995)
n <- 50
x_bar + c(-1, 1) * z_value * e/sqrt(n)
sd <- 25
e <- 4
z_value <- qnorm(p = 0.995)
n <- sd / (e/z_value)
ceiling(n)
1-.99
0.01/2
1-0.005
sd <- 25
e <- 4
z_value <- qnorm(p = 0.995)
n <- (sd / (e/z_value))^2
ceiling(n)
n <- 200
se <- sqrt(0.15*(1 - 0.15)/n)
mu <- 0.15
pnorm(q = 0.17, mean = mu, sd = se) - pnorm(q = 0.13, mean = mu, sd = se)
x_bar <- 0.995
sigma <- 0.02
z_value <- qnorm(p = 0.995)
n <- 50
x_bar + c(-1, 1) * z_value * sigma/sqrt(n)
sigma <- 25
e <- 4
z_value <- qnorm(p = 0.995)
n <- (sigma / (e/z_value))^2
ceiling(n)
x = read.csv('carm.txt', header = FALSE, sep = '')
n = nrow(x)
e  =   eigen((n- 1) * cov(x)/n) # calculates eigenvalues and eigenvectors and
sorts them by size
e1   = e$value
n = nrow(x)
e  =   eigen((n- 1) * cov(x)/n)
e1  = e$value
n = nrow(x)
e  =   eigen((n- 1) * cov(x)/n)
n = nrow(x)
e  =   eigen((n
- 1) * cov(x
)/n)
e  =   eigen((n- 1) * cov(x)/n)
x
x = x[,-1]
n = nrow(x)
e  =   eigen((n- 1) * cov(x)/n)
e1  = e$value
e1
e1^0.5
pro <- e1/sum(e1)
pro
Tau  = eigen((n -
1) * cov(x)/n)$vectors
tau
Tau
setwd("~/Google Drive/2018R1 High-Dimensional Data Analysis (STAT5103)/Assignment/4")
download.file("https://s3-ap-southeast-1.amazonaws.com/learn-ap-southeast-1-prod-fleet02-xythos/593a61e7aa84f/4370850?response-content-disposition=inline%3B%20filename%2A%3DUTF-8%27%27uscrime.txt&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20181109T043125Z&X-Amz-SignedHeaders=host&X-Amz-Expires=21600&X-Amz-Credential=AKIAJDDBGKVKR5QVHNHA%2F20181109%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=f134b163af021be089510ce733c5becbdf01ce30c3c765cb1156bb1eab0220d1", "uscrime.txt")
uscrime <- read.csv('uscrime.txt', header = FALSE, sep = '')
names <- c("Land_area", "Population", "Murder", "Rape", "Robbery", "Assault", "Burglary", "Larceny", "Auto_theft", "states_region_num", "states_division_num")
names(uscrime) <- names
pc_car <- pc_car[,3:9]
uscrime <- read.csv('uscrime.txt', header = FALSE, sep = '')
names <- c("Land_area", "Population", "Murder", "Rape", "Robbery", "Assault", "Burglary", "Larceny", "Auto_theft", "states_region_num", "states_division_num")
names(uscrime) <- names
uscrime <- uscrime[,3:9]
summary(uscrime)
ggpairs(uscrime)
ggpairs(scale(uscrime))
View(scale(uscrime))
class(scale(uscrime))
class(data.frame(scale(uscrime)))
ggpairs(data.frame(scale(uscrime)))
head(uscrime)
sigma <- cov(pc_car)
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
head(sigma)
nrow(pc_car)
23*sigma / (22)
View(sigma)
View(23*sigma / (22))
View(pc_car)
n <- nrow(pc_car)
sigma <- n * cov(pc_car) / (n-1)
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
n <- nrow(pc_car)
sigma <- (n-1) * cov(pc_car, ) / n
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
n <- nrow(pc_car)
sigma <- (n-1) * cov(pc_car) / n
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
View(cov(pc_car))
View(cov(pc_car))
View(pc_car_pca$rotation)
View(eigen(cov(pc_car))$vectors)
View(eigen(sigma)$vectors)
n = nrow(pc_car)
e  =   eigen((n - 1) * cov(x)/n)
View(e)
Tau  = eigen((n -
1) * cov(x)/n)$vectors
View(Tau)
Tau  = eigen(cov(x))$vectors
View(Tau)
var(pc_car)[1]
var(pc_car)
var(pc_car[1])
n
0.7462846 * 23 /22
0.7462846 * 22 /23
head(CorYX)[1,]
n <- nrow(pc_car)
sigma <- cov(pc_car)
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
n <- nrow(pc_car)
sigma <- cov(pc_car)
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
n <- nrow(pc_car)
sigma <- (n-1) * cov(pc_car) / n
CovYX <- t(pc_car_pca$rotation) %*% sigma
VarY<- t(eigen(sigma)$vectors) %*% sigma %*% eigen(sigma)$vectors
DiagvarY<- diag(1/sqrt(diag(VarY)))
DiagSigma<- diag(1/sqrt(diag(sigma)))
CorYX <- DiagvarY %*% t(pc_car_pca$rotation) %*% sigma %*% DiagSigma
CorYX <- t(CorYX)[,1:2]
CorYX <- cbind(CorYX, CorYX[,1]^2 + CorYX[,2]^2)
colnames(CorYX) <- c(colnames(pc_car_pca$rotation)[1:2], "r^2 sum"); rownames(CorYX) <- colnames(pc_car)
CorYX
.56^2 + .82^2
.78^2 + .53^2
install.packages("sas7bdat")
library("sas7bdat", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("knitr")
opts_chunk$set(echo = TRUE, cache=TRUE, message=FALSE, warning = FALSE)
options(width = 100)
library("ggplot2")
library("GGally")
library("dplyr")
uscrime <- read.csv('uscrime.txt', header = FALSE, sep = '')
names <- c("Land_area", "Population", "Murder", "Rape", "Robbery", "Assault", "Burglary", "Larceny", "Auto_theft", "states_region_num", "states_division_num")
names(uscrime) <- names
uscrime <- uscrime[,3:9]
summary(uscrime)
#Principle Component using non-centered, non-scaled datas
uscrime_pca <- prcomp(uscrime)
names(uscrime_pca)
uscrime_pca
summary(uscrime_pca)
mlmv <- fa(uscrime, nfactors = 3, rotate = "varimax", fm="ml")
mlmv <- psych::fa(uscrime, nfactors = 3, rotate = "varimax", fm="ml")
mlmv_load <- mlmv$loadings[1:7,]
mlmv_com <- mlmv$communalities
mlmv_psi <- mlmv$uniquenesses
mlmv_tbl <- cbind(mlmv_load, mlmv_com, mlmv_psi)
mlmv_tbl
mlmv$Vaccounted
mlmv$loadings
pcfa <- psych::principal(r = uscrime, nfactors = 3, rotate = "varimax")
pcfa_load <- pcfa$loadings[1:7,]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
pcfa$Vaccounted
pcfa$loadings
pcfa <- psych::principal(r = uscrime, nfactors = 2, rotate = "varimax")
pcfa_load <- pcfa$loadings[1:7,]
pcfa_com <- pcfa$communality
pcfa_psi <- pcfa$uniquenesses
pcfa_tbl <- cbind(pcfa_load, pcfa_com, pcfa_psi)
pcfa_tbl
pcfa$Vaccounted
pcfa$loadings
