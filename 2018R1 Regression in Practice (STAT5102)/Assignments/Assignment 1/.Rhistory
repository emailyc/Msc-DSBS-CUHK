var(c(1,2,3,2) + 1)
c(1,2,3,2) + 1
var(c(1,2,3,2) * 2)
2+(2/3)
2.666667/0.6666667
hihi = c(1,2,3,2)
n = length(hihi)
(n-1)/n * var(hihi) + (1/n)*(4-mean(hihi))^2
var(c(1,2,3,2, 4))
q5 = var(c(1,2,3,2, 4))
q5 == (n-1)/n * var(hihi) + (1/n)*(4-mean(hihi))*(4-mean(c(1,2,3,2, 4)))
var(matrix(c(1,2,3,4), 2))
var(matrix(c(1,2,8,4), 2))
var(c(1,2,3,2, 4))
cov(matrix(1,2,5,4), 2)
cov(matrix(1,2,5,4))
cov(matrix(c(1,2,5,4)), 2)
cov(matrix(c(1,2,5,4), 2))
cov(matrix(c(1,5,2,4), 2))
cov(c(1,2), c(5,4))
matrix(c(1,2,5,4), 2)
var(c(1,2))
var(c(1,5))
cov(matrix(1,2,5,4))
matrix(c(1,2,5,4))
matrix(c(1,2,5,4), 2)
(1-1.5)*(5-4.5)
var(c(1,5))
var(c(1,2))
var(c(4, 4.2, 3.9, 4.3, 4.1))
var(c(1,2))
var(c(5,4))
(1-1.5)^2 + (2-1.5)^2
0.5/2
(1-1.5)^2 * (2-1.5)^2
cov(matrix(c(1,1,1,1,1,2,3,4,1,1,2,3), 4))
cov(matrix(c(2,3,4,7), 2))
var(1,2)
.5^2 + .5^2
0.5/2
mean(c(1,2))
((1-1.5)^2 + (2-1.5)^2)/2
((2-3)^2 + (4-3)^2)/2
((2-3)^2 + (4-3)^2)/1
var(c(1,5))
((1-3)^2 + (5-3)^2)/1
((1-3)^2 + (5-3)^2)/2
(3-5)^2 + (7-5)^2
var(matrix(c(1,5,2,4), 2))
((1-3)^2 + (5-3)^2)
((1-3)^2 + (5-3)^2)/2
4/3
mean(c(-2, 4, 6))
mean(c(-1, 1))
mean(c(1, 2))
mean(c(1, 2)*2)
mean(c(1, -2))
mean(c(1, -2)*2)
sqrt91
sqrt(1)
2*sqrt(5)
sqrt(2)
c(1,2) %*% c(2,1)
c(3,4) %*% c(-1,-1)
-7/(sqrt(9+16) * sqrt(2))
cos(-7/(sqrt(9+16) * sqrt(2)))
acos(-7/(sqrt(9+16) * sqrt(2)))
sqrt(13)
c(1,2,3) %*% c(-1,0,8)
23/(sqrt(1+4+9) * sqrt(1+64))
acos(23/(sqrt(1+4+9) * sqrt(1+64)))
sqrt(14)
acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
a = c(3,4); b = c(-1,-1)
acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
a = c(1,2,3); b = c(-1,0,8);acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
a = c(1,2,3); b = c(1,2,3)-c(-1,0,8);acos( sum(a*b) / ( sqrt(sum(a * a)) * sqrt(sum(b * b)) ) )
setwd("~/Documents/Statistics with R/Capstone")
load("ames_train.Rdata")
names(ames_train)
colSums(is.na(ames_train))
class(colSums(is.na(ames_train)))
order(colSums(is.na(ames_train)))
sort(colSums(is.na(ames_train)))
sort(colSums(is.na(ames_train)), decreasing = 1)
sort(colSums(is.na(ames_train)), decreasing = True)
sort(colSums(is.na(ames_train)), decreasing = TRUE
)
head(sort(colSums(is.na(ames_train)), decreasing = TRUE), 3)
# type your code for Question 1 here, and Knit
head(sort(colSums(is.na(ames_train)), decreasing = TRUE), 3)
class(ames_train)
sapply(ames_train, class)
str(ames_train)
summary(ames_train)
str(ames_train)
to_factor(ames_train$PID)
as.factor(ames_train$PID)
tapply(ames_train$price, ames_train$Neighborhood, sd)
sort(tapply(ames_train$price, ames_train$Neighborhood, sd), decreasing = TRUE)
# type your code for Question 3 here, and Knit
sort(tapply(ames_train$price, ames_train$Neighborhood, sd), decreasing = TRUE)[1]
plotmatrix(ames_train[,Lot.Area])
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
plotmatrix(ames_train[,Lot.Area])
library("GGally", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
# type your code for Question 4 here, and Knit
par(2,2)
ggplot(ames_train, aes(x=Lot.Area, y=price)) + geom_point()
ggplot(ames_train, aes(x=Bedroom.AbvGr, y=price)) + geom_point()
ggplot(ames_train, aes(x=Overall.Qual, y=price)) + geom_point()
ggplot(ames_train, aes(x=Year.Built, y=price)) + geom_point()
ggpairs(ames_train, columns=c("price", "Lot.Area", "Bedroom.AbvGr", "Overall.Qual", "Year.Built")
)
qplot(price, area, ames_train)
qplot('price', 'area', data = ames_train)
qplot(price, area, ames_train)
qplot(price, area, data = ames_train, geom=c("point", "line"))
qplot(price, area, data = ames_train, geom=c("point"))
qplot(price, area, data = ames_train, geom=c("point", 'lm'))
qplot(price, area, data = ames_train, geom=c("point", 'abline'))
qplot(price, area, data = ames_train, geom=c("point", 'smooth'))
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), log = x)
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), log = 'x')
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), log = 'y')
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), log = 'xy')
qplot(price, area, data = ames_train, geom=c("point", 'smooth'))
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), method="lm", se = FALSE)
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), method="lm", se = FALSE, log = 'x')
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), method="lm", se = FALSE, log = 'y')
qplot(price, area, data = ames_train, geom=c("point", 'smooth'), method="lm", se = FALSE, log = 'xy')
length(ames_train$Garage.Type)
length(ames_train$Garage.Type == NA
)
length(is.na(ames_train$Garage.Type))
table(ames_train$Garage.Type)
sum(table(ames_train$Garage.Type))
length(ames_train)
nrow(ames_train)
# type your code for Question 6 here, and Knit
nrow(ames_train) - sum(table(ames_train$Garage.Type))
ames_train$Year.Built[1]
ames_train$Year.Built[1]>2000
length(ames_train$Year.Built > 1999)
sum(ames_train$Year.Built > 1999)
median(ames_train$price) > mean(ames_train$price)
sum(ames_train$Street == 'Grvl')
median(ames_train$price)
mean(ames_train$price)
sum(is.na(ames_train$Bsmt.Qual))
sum(is.na(ames_train$Garage.Type))
t.test(x = ames_train[ames_train$Garage.Finish != NA]$Lot.Area)
View(ames_train[ames_train$Garage.Finish != NA]$Lot.Area)
View(ames_train$Lot.Area[ames_train$Garage.Finish != NA])
View(ames_train[ames_train$Garage.Finish != NA])
View(ames_train[,ames_train$Garage.Finish != NA])
head(ames_train$Garage.Finish != NA])
head(ames_train$Garage.Finish != NA)
head(ames_train$Garage.Finish == NA)
head(is.na(ames_train$Garage.Finish))
View(ames_train[is.na(ames_train$Garage.Finish)]$Lot.Area)
View(ames_train[,is.na(ames_train$Garage.Finish)]$Lot.Area)
View(ames_train$Lot.Area[,is.na(ames_train$Garage.Finish)])
View(ames_train$Lot.Area[is.na(ames_train$Garage.Finish)])
t.test(ames_train$Lot.Area[!is.na(ames_train$Garage.Finish)], ames_train$Lot.Area[is.na(ames_train$Garage.Finish)], alternative = "greater")
t.test(ames_train$Lot.Area[!is.na(ames_train$Garage.Finish)], ames_train$Lot.Area[is.na(ames_train$Garage.Finish)])
1.5 ^ e^(-1.5)
1.5 ^ exp^(-1.5)
1.5 *exp(-1.5)
1-0.3346952
.75/(4/3)
9/16
k = 3/(4/3)
k
b = 3
a = 9
q9 = ames_train$Bedroom.AbvGr[ames_train$area > 2000]
nrow(q9)
head(ames_train$area > 2000)
View(q9)
length(q9)
(a+sum(q9))/(b+length(q9))
(a+sum(q9))/(b+length(q9))^2
sqrt((a+sum(q9))/(b+length(q9))^2)
plot(lm(data = ames_train, formula = price~area))
plot(lm(data = ames_train, formula = log(price)log(~area)))
plot(lm(data = ames_train, formula = log(price)~log(area)))
ames_train[c(428, 471, 206),]
View(ames_train[c(428, 471, 206),])
View(ames_train[c(428, 471, 206),Bedroom])
View(ames_train[c(428, 471, 206),'Bedroom'])
View(ames_train[c(428, 471, 206),'Bedroom'])
View(ames_train[c(428, 471, 206),c(Sale.Condition,
Bedroom.AbvGr,
Overall.Qual)])
View(ames_train[c(428, 471, 206),c('Sale.Condition',
'Bedroom.AbvGr',
'Overall.Qual')])
View(ames_train[c(428, 741, 206),c('Sale.Condition',
'Bedroom.AbvGr',
'Overall.Qual', Year.Built)])
View(ames_train[c(428, 741, 206),c('Sale.Condition',
'Bedroom.AbvGr',
'Overall.Qual', 'Year.Built')])
# type your code for Question 10 here, and Knit
ames_train[c(428, 741, 206),c('Sale.Condition', 'Bedroom.AbvGr','Overall.Qual', 'Year.Built')]
plot(density(ames_train$price))
sum(ames_train$Bldg.Type = 1PID)
sum(ames_train$Bldg.Type = 1Fam)
sum(ames_train$Bldg.Type == 1Fam)
sum(ames_train$Bldg.Type == '1Fam')
# type your code for Question 11 here, and Knit
ames_train %>%
group_by(Neighborhood) %>%
filter(Bldg.Type = '1Fam')
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
# type your code for Question 11 here, and Knit
ames_train %>%
group_by(Neighborhood) %>%
filter(Bldg.Type = '1Fam')
# type your code for Question 11 here, and Knit
ames_train %>%
group_by(Neighborhood) %>%
filter(Bldg.Type == '1Fam')
View(ames_train %>%
group_by(Neighborhood) %>%
filter(Bldg.Type == '1Fam'))
# type your code for Question 11 here, and Knit
ames_train %>%
filter(Bldg.Type == '1Fam')%>%
group_by(Neighborhood)
summarise(mean(Bldg.Type == "1Fam"))
# type your code for Question 12 here, and Knit
ames_train %>%
group_by(Neighborhood) %>%
summarise(mean(Bldg.Type == "1Fam"))
table(ames_train$Neighborhood[ames_train$Bldg.Type == '1Fam'])
mean(ames_train$Bsmt.Unf.SF[ames_train$BsmtFin.Type.1 == 'Unf'])
mean(ames_train$Bsmt.Unf.SF[ames_train$BsmtFin.Type.1 == 'Unf'], na.rm = TRUE)
mean(ames_train$Bsmt.Unf.SF[ames_train$BsmtFin.Type.1 == 'Unf' && ames_train$BsmtFin.Type.2 == 'Unf'], na.rm = TRUE)
mean(ames_train$Bsmt.Unf.SF[ames_train$BsmtFin.Type.1 == 'Unf' & ames_train$BsmtFin.Type.2 == 'Unf'], na.rm = TRUE)
head(ames_train$Bsmt.Unf.SF)
mean(ames_train$Bsmt.Unf.SF[ames_train$BsmtFin.Type.1 == 'Unf' && ames_train$Bsmt.Unf.SF > 0], na.rm = TRUE)
summary(ames_train$Bsmt.Unf.SF)
table(ames_train$Bsmt.Unf.SF)
mean(ames_train$Bsmt.Unf.SF[ames_train$Bsmt.Unf.SF > 0], na.rm = TRUE)
ames_train %>%
filter(!is.na(Bsmt.Unf.SF), Bsmt.Unf.SF > 0) %>%
summarise(mean = mean(Bsmt.Unf.SF))
qplot(data = ames_train, area, Bedroom.AbvGr, log = 'y', geom = c(points))
qplot(data = ames_train, area, Bedroom.AbvGr, log = 'y', geom = c('points'))
qplot(data = ames_train, area, Bedroom.AbvGr, log = 'y', geom = c('point'))
qplot(data = ames_train, area, Bedroom.AbvGr, log = 'x', geom = c('point'))
with(ames_train, cor(area, Bedroom.AbvGr))
with(ames_train, cor(log(area), Bedroom.AbvGr))
sum(table(ames_train$Garage.Type))
sum(table(ames_train$Garage.Type))+9
anyNA(ames_train$Garage.Type)
head(ames_train$Garage.Type)
table(ames_train$Garage.Type)
# type your code for Question 6 here, and Knit
amnrow(ames_train) - sum(table(ames_train$Garage.Type))
# type your code for Question 6 here, and Knit
nrow(ames_train) - sum(table(ames_train$Garage.Type))
# type your code for Question 6 here, and Knit
sum(table(ames_train$Garage.Type))
# type your code for Question 6 here, and Knit
sum(table(ames_train$Garage.Type)) + 9
x = c(3,2,1)
t(x)%*%x
4^2
2^4
9^3
(3^3)^3
(3^6)
3^5
82^2
3^6
33
3^3
(3^3)^2
(3^5)
(3^6)
source("https://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade")
source('~/Downloads/mplus.R', encoding = 'UTF-8')
file.choose()
meiki_file = "/Users/Dants/Downloads/Moderation M2 Product Terms LOOP.gh5"
mplus.view.plots(meiki_file)
mplus.list.variables(meiki_file)
meiki_file = "/Users/Dants/Desktop/Moderation M2 Product Terms LOOP(plot3).gh5"
mplus.list.variables(meiki_file)
mplus.plot.histogram(meiki_file,"POSEST")
hihi = read.csv("/Users/Dants/Downloads/Bisection Task with Dynanometer/Logs/40-Bisection Task with Dynanometer.txt")
View(hihi)
hihi = read.csv("/Users/Dants/Downloads/Bisection Task with Dynanometer/Logs/40-Bisection Task with Dynanometer.txt", sep = " ")
View(hihi)
hihi = read.csv("/Users/Dants/Downloads/Bisection Task with Dynanometer/Logs/40-Bisection Task with Dynanometer.txt", sep = "/t")
hihi = read.csv("/Users/Dants/Downloads/Bisection Task with Dynanometer/Logs/40-Bisection Task with Dynanometer.txt", sep = "\t")
file.choose()
log1 = read.csv("/Users/Dants/Downloads/Bisection-Task/Logs/1-Bisection Task with Dynanometer.log", sep = " ")
log1 = read.csv("/Users/Dants/Downloads/Bisection-Task/Logs/1-Bisection Task with Dynanometer.log", sep = " ", skip = 3)
View(log1)
log1 = read.csv("/Users/Dants/Downloads/Bisection-Task/Logs/1-Bisection Task with Dynanometer.log", sep = "\t", skip = 3)
log1 = log1[4]
log1 = log1[3:]
log1 = log1[-1:2]
log1 = log1[-1]
log1 = read.csv("/Users/Dants/Downloads/Bisection-Task/Logs/1-Bisection Task with Dynanometer.log", sep = "\t", skip = 3)
log1 = log1[4]
Q = matrix(c(0,1,1,0), 2)
A = Q
B = matrix(c(4,0,0,2), 2)
eigen(solve(B)%*%A)
2*sqrt(2)
A
eigen(B%*%A)
2*sqrt(2)
B = matrix(c(1/4,0,0,1/2), 2)
eigen(solve(B)%*%A)
A = matrix(c(1,2,2,3), 2)
B = matrix(c(1,0,0,1), 2)
eigen(solve(B)%*%A
)
2*sqrt(5)
2+sqrt(5)
A = matrix(c(1, 0.5, 0.5, 0), 2)
eigen(A
)
A = matrix(c(0, 0.5, 0.5, 0), 2)
eigen(A)
1/sqrt(2)
A = matrix(c(0, 1, 1, 0), 2)
B = matrix(c(4, 0, 0, 2), 2)
solve(B)%*%A
eigen(B%*%A%*%B)
eigen(solve(B)%*%A)
eigen(B%*%A%*%B)
B%*%eigen(B%*%A%*%B)$vectors[1]
eigen(B%*%A%*%B)$vectors[1]
eigen(B%*%A%*%B)$vectors[,1]
eigen(B%*%A%*%B)$vectors[,1]
B%*%eigen(B%*%A%*%B)$vectors[,1]
2*sqrt(2)
B%*%8
B*8
A = matrix(c(0, 1, 1, 0), 2)
B = matrix(c(4, 0, 0, 2), 2)
eigen(B%*%A%*%B)
B%*%eigen(B%*%A%*%B)$vectors
B%*%A%*%B
B%*%eigen(B%*%A%*%B)$vectors[,2]
setwd("~/Google Drive/2018R1 Regression in Practice (STAT5102)/Assignments/Assignment 1")
library("knitr")
opts_chunk$set(echo = TRUE, cache=TRUE, message=FALSE, warning = FALSE)
options(width = 100)
library("ggplot2")
library("GGally")
library("dplyr")
htwt <- read.csv("htwt.txt", header = TRUE, sep = " ")
oldfaith <- read.csv("oldfaith.txt", header = TRUE, sep = " ")[-3]
htwt <- read.csv("htwt.txt", header = TRUE, sep = " ")
oldfaith <- read.csv("oldfaith.txt", header = TRUE, sep = " ")[-3]
x <- c(mean(htwt$Ht), mean(htwt$Wt), var(htwt$Ht), var(htwt$Wt), cov(htwt$Ht, htwt$Wt))
names(x) <- c("Ht_mean", "Wt_mean", "Ht_var", "Wt_var", "HtWt_cov")
x
model <- lm(data = htwt, Wt ~ Ht)
model$coefficients
ggplot(data = htwt, aes(x = Ht, y = Wt)) + geom_point(size = 4) + geom_smooth(method = lm, se = FALSE) + ggtitle("Scatterplot of htwt.txt")
htwt$Ht
sd(htwt$Ht)
var(htwt$Ht)
472.076/9
x <- c(mean(htwt$Ht), mean(htwt$Wt), sum((htwt$Ht - mean(htwt$Ht))^2), sum((htwt$Wt - mean(htwt$Wt))^2), sum((htwt$Ht - mean(htwt$Ht)) * (htwt$Wt - mean(htwt$Wt))))
names(x) <- c("Ht_mean", "Wt_mean", "Sxx", "Syy", "Sxy")
x
model <- lm(data = htwt, Wt ~ Ht)
model$coefficients
ggplot(data = htwt, aes(x = Ht, y = Wt)) + geom_point(size = 4) + geom_smooth(method = lm, se = FALSE) + ggtitle("Scatterplot of htwt.txt")
64.4728 * 472.076
0.3891815* 472.076
mean(sm$residuals^2)
x <- c(mean(htwt$Ht), mean(htwt$Wt), sum((htwt$Ht - mean(htwt$Ht))^2), sum((htwt$Wt - mean(htwt$Wt))^2), sum((htwt$Ht - mean(htwt$Ht)) * (htwt$Wt - mean(htwt$Wt))))
names(x) <- c("Ht_mean", "Wt_mean", "Sxx", "Syy", "Sxy")
x
model <- lm(data = htwt, Wt ~ Ht)
model$coefficients
ggplot(data = htwt, aes(x = Ht, y = Wt)) + geom_point(size = 4) + geom_smooth(method = lm, se = FALSE) + ggtitle("Scatterplot of htwt.txt")
mean(model$residuals^2)
57.20136/8
model$residuals
sum(model$residuals^2)
sum(model$residuals^2)/8
b1_MSE = sum(model$residuals^2)/(n-2)
b1_MSE = sum(model$residuals^2)/(10-2)
b1_MSE
MSE/Sxx
b1_MSE/Sxx
Sxx = sum((htwt$Ht - mean(htwt$Ht))^2)
Syy = sum((htwt$Wt - mean(htwt$Wt))^2)
Sxy = sum((htwt$Ht - mean(htwt$Ht)) * (htwt$Wt - mean(htwt$Wt)))
x <- c(mean(htwt$Ht), mean(htwt$Wt), Sxx, Syy, Sxy)
names(x) <- c("Ht_mean", "Wt_mean", "Sxx", "Syy", "Sxy")
x
model <- lm(data = htwt, Wt ~ Ht)
model$coefficients
ggplot(data = htwt, aes(x = Ht, y = Wt)) + geom_point(size = 4) + geom_smooth(method = lm, se = FALSE) + ggtitle("Scatterplot of htwt.txt")
n = nrow(htwt)
b1_MSE = sum(model$residuals^2)/(n-2)
b1_SE = MSE/Sxx
b1_MSE = sum(model$residuals^2)/(n-2)
b1_SE = b1_MSE/Sxx
b1_SE
b1_MSE
sqrt(b1_MSE)
b1_MSE/Sxx
0.1514623^2
b1_MSE/Sxx
b1_MSE/Sxx
model$residuals
sum(model$residuals^2)/10
57.20136/Sxx
b1_MSE/Sxx
b1_MSE
MSE = sum(model$residuals^2)/(nrow(htwt)-2)
MSE = sum(model$residuals^2)/(nrow(htwt)-2)
b0_SE = MSE / (1/nrow(htwt) +
(mean(htwt$Ht) / Sxx)
)
x <- matrix(c(MSE, b0_SE, MSE, MSE/Sxx), 2, 2, byrow = TRUE, dimnames = list(c("MSE", "standard error"), c("intercept", "b1"))))
MSE = sum(model$residuals^2)/(nrow(htwt)-2)
b0_SE = MSE / (1/nrow(htwt) +
(mean(htwt$Ht) / Sxx)
)
x <- matrix(c(MSE, b0_SE, MSE, MSE/Sxx), 2, 2, byrow = TRUE, dimnames = list(c("MSE", "standard error"), c("intercept", "b1")))
x
MSE/Sxx
b0_SE = MSE / (1/nrow(htwt) +
(mean(htwt$Ht) / Sxx)
)
b0_SE
MSE
MSE/Sxx
Sxx
sqrt(MSE)/sqrt(Sxx)
sqrt(b0_SE)
b0_SE
MSE * (1/nrow(htwt) +
(mean(htwt$Ht) / Sxx)
)
summary(model)$coefficients[1, 2]
summary(model)$coefficients
summary(model)$coefficients[2, 2]
MSE = sum(model$residuals^2)/(nrow(htwt)-2)
b1_SE = summary(model)$coefficients[2, 2]
b0_SE = summary(model)$coefficients[1, 2]
x <- matrix(c(MSE, b0_SE, MSE, b1_SE), 2, 2, byrow = TRUE, dimnames = list(c("MSE", "standard error"), c("intercept", "b1")))
x
MSE = sum(model$residuals^2)/(nrow(htwt)-2)
b1_SE = summary(model)$coefficients[2, 2]
b0_SE = summary(model)$coefficients[1, 2]
x <- matrix(c(MSE, b0_SE, MSE, b1_SE), 2, 2, byrow = F, dimnames = list(c("MSE", "standard error"), c("intercept", "b1")))
x
MSE = sum(model$residuals^2)/(nrow(htwt)-2) %>% round(., 4)
b1_SE = summary(model)$coefficients[2, 2]
b0_SE = summary(model)$coefficients[1, 2]
x <- matrix(c(MSE, b0_SE, MSE, b1_SE), 2, 2, byrow = F, dimnames = list(c("MSE", "standard error"), c("intercept", "b1")))
x
MSE = sum(model$residuals^2)/(nrow(htwt)-2) %>% round(., 4)
b1_SE = summary(model)$coefficients[2, 2] %>% round(., 4)
b0_SE = summary(model)$coefficients[1, 2] %>% round(., 4)
x <- matrix(c(MSE, b0_SE, MSE, b1_SE), 2, 2, byrow = F, dimnames = list(c("MSE", "standard error"), c("intercept", "b1")))
x
0.3892*Sxx
71.5017/Sxx
sqrt(0.3892*Sxx)
sqrt(71.5017/Sxx)
0.3891815^2 * Sxx
cor(htwt$Ht, htwt$Wt)
cov(htwt$Ht, htwt$Wt) / sqrt(var(htwt$Ht)*var(htwt$Wt))
-24.975/10.832
74.131/25.967
hihi
hihi = matrix(c(2,4,1,,4), 2)
hihi
hihi = matrix(c(2,4,1,4), 2)
hihi
solve(hihi)
svd(hihi$)v %*% diag(svd(hihi$)d)%*%t(svd(hihi$)u)
svd(hihi$v) %*% diag(svd(hihi$)d)%*%t(svd(hihi$)u)
svd(hihi)$v %*% diag(svd(hihi$)d)%*%t(svd(hihi$)u)
svd(hihi)$v %*% diag(svd(hihi$)d)
svd(hihi)$v %*% diag(svd(hihi)$d)
svd(hihi)$v %*% diag(svd(hihi)$d)%*%t(svd(hihi$)u)
svd(hihi)$v %*% diag(svd(hihi)$d)%*%t(svd(hihi)$u)
svd(hihi)$v %*% solve(diag(svd(hihi)$d))%*%t(svd(hihi)$u)
one = rnorm(100, 10, 5)
twp = rnorm(100, 50, 10)
top = rnorm(100, 50, 10)
one + two
two = rnorm(100, 50, 10)
one + two
mean(one + two)
var(one + two)
one = rnorm(1000, 10, 5)
two = rnorm(1000, 50, 10)
var(one + two)
qt(p = .05, 10000)
qt(p = .0025, 10000)
qt(p = .025, 10000)
qt(p = .975, 10000)
