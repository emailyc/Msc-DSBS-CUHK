BGSall <- read.csv("BGSall.txt", header = TRUE, sep = " ")
BGSboys <- read.csv("BGSboys.txt", header = TRUE, sep = " ")
BGSgirls <- read.csv("BGSgirls.txt", header = TRUE, sep = " ")
maple <- read.table("maple.txt", header = TRUE, sep = "", stringsAsFactors = TRUE)
t(BGSall)%*%BGSall
View(BGSall)
View(cov(BGSall))
hihi = matrix(BGSall)
t(hihi)%*%hihi
hihi
View(hihi)
maple <- read.table("maple.txt", header = TRUE, sep = "", stringsAsFactors = TRUE)
setwd("~/Google Drive/2018R1 Regression in Practice (STAT5102)/Assignments/Assignment 2")
maple <- read.table("maple.txt", header = TRUE, sep = "", stringsAsFactors = TRUE)
maple$Location
View(maple[-1]
)
hihi = maple[-1]
View(t(maple))
View(t(hihi))
eigen(t(hihi))
t(hihi)%*%hihi
t(hihi)%*%as.matrix(hihi)
n = nrow(hihi)
View(as.matrix(hihi)%*%t(hihi))
dim(as.matrix(hihi)%*%t(hihi))
dim(t(hihi)%*%as.matrix(hihi))
dim(hihi)
n_by_n = as.matrix(hihi)%*%t(hihi)
B = eigen(n_by_n)$vectors
B
B = eigen(cov(hihi))$vectors
t(hihi)%*%B
ci = hihi%*%B
ci = as.matrix(hihi)%*%B
View(t(hihi)%*%ci)
View(ci)
View(eigen(n_by_n)$vectors)
ei_values = eigen(cov(hihi))$values
ei_values*t(hihi)%*%ci
(1/n)*t(hihi)%*%hihi%*%t(hihi)%*%ci
(1/n)*t(as.matrix(hihi))%*%as.matrix(hihi)%*%t(as.matrix(hihi))%*%ci
-245376083/-1448205.20
ei_values
ei_values = (1/n)*t(as.matrix(hihi))%*%as.matrix(hihi)
ei_values
cov(hihi)
1688.457/16.362503
(1/(n-1))*t(as.matrix(hihi))%*%as.matrix(hihi)
var(hihi$Latitude)
t(as.matrix(hihi))%*%as.matrix(hihi)
1742.9230^2
sqrt(ei_values)
t(as.matrix(hihi))%*%as.matrix(hihi)/nrow(hihi)
nrow(hihi)
sqrt91688.457
sqrt(1688.457)
View(hihi)
hihi = t(hihi)
cov(hihi)
View((1/n)*t(as.matrix(hihi))%*%as.matrix(hihi))
View((n-1)^-1 t(hihi) %*% hihi)
View((n-1)^-1 %*% t(as.matrix(hihi)) %*% as.matrix(hihi))
View((1/n)%*%t(as.matrix(hihi))%*%as.matrix(hihi))
View((1/n)*t(as.matrix(hihi))%*%as.matrix(hihi))
View(cov(hihi))
means = mean(hihi)
dim(means)
means
means = sapply(hihi, mean, 0)
dim(means)
means
means = sapply(hihi, mean, 1)
means
colMeans(hihi)
D = hihi = colMeans(hihi)
View((1/n)*t(as.matrix(D))%*%as.matrix(D))
D
D = hihi - colMeans(hihi)
hihi
hihi = t(maple[-1])
D = hihi - colMeans(hihi)
View((1/n)*t(as.matrix(D))%*%as.matrix(D))
D = hihi - diag(colMeans(hihi))
View(hihi)
hihi = hihi - colMeans(hihi)
S = (1/n)*t(as.matrix(hihi))%*%as.matrix(hihi)
View(S)
View(cov(hihi))
colMeans(hihi)
colMeans(t(maple[-1]))
hihi = t(maple[-1])
rowMeans(hihi)
mean(hihi[1,])
max(hihi[1,])
View(hihi)
View(hihi-rowMeans(hihi))
hihi = hihi-rowMeans(hihi)
S = (1/n)*t(as.matrix(hihi))%*%as.matrix(hihi)
View(S
)
View(cov(t(maple[-1]) - rowMeans(t(maple[-1])))
)
View(t(maple[-1]) - rowMeans(t(maple[-1])))
View(cov(t(maple[-1]) - rowMeans(t(maple[-1]))))
S = (1/n)*as.matrix(hihi)%*%t(as.matrix(hihi))
View(S)
S = (1/n)*t(as.matrix(hihi))%*%as.matrix(hihi)
View(hihi)
a <- c(1,2,3,4,5,6)
b <- c(2,3,5,6,1,9)
c <- c(3,5,5,5,10,8)
d <- c(10,20,30,40,50,55)
e <- c(7,8,9,4,6,10)
M <- cbind(a,b,c,d,e)
M
k <- ncol(M) #number of variables
n <- nrow(M) #number of subjects
matrix(data=1, nrow=n) %*% cbind(mean(a),mean(b),mean(c),mean(d),mean(e))
colMeans(M)
M_mean <- matrix(data=1, nrow=n) %*% cbind(mean(a),mean(b),mean(c),mean(d),mean(e))
D <- M - M_mean
(n-1)^-1 t(D) %*% D
(n-1)^-1 * t(D) %*% D
cov(M)
hihi = t(maple[-1])
k <- ncol(hihi) #number of variables
n <- nrow(hihi) #number of subjects
M_mean <- matrix(data=1, nrow=n) %*% cbind(colMeans(hihi))
M_mean <- matrix(data=1, nrow=n) %*% cbind(rowMeans(hihi))
mean(a)
colMeans(hihi)
M_mean <- matrix(data=1, nrow=n) %*% rowMeans(hihi)
D <- hihi - M_mean
View(M_mean)
matrix(data=1, nrow=n) %*% cbind(mean(a),mean(b),mean(c),mean(d),mean(e))
matrix(data=1, nrow=n) %*% rowMeans(hihi)
matrix(data=1, nrow=n) %*% colMeans(hihi)
M_mean = matrix(data=1, nrow=n) %*% colMeans(hihi)
dim(hihi)
D <- hihi - M_mean
C <- (n-1)^-1 *t(D) %*% D
View(C)
cov(hihi)
View(cov(hihi))
center_matrix = function(matrix){
k <- ncol(matrix) #number of variables
n <- nrow(matrix) #number of subjects
#create means for each column
M_mean <- matrix(data=1, nrow=n) %*% colMeans(matrix)
#creates a difference matrix
D <- M - M_mean
return(D)
}
B = eigen(hihi)$vectors
B = eigen(C)$vectors
ci = hihi%*%B
hihi = center_matrix(hihi)
k <- ncol(matrix) #number of variables
n <- nrow(matrix) #number of subjects
matrix(data=1, nrow=n) %*% colMeans(matrix)
k <- ncol(hihi) #number of variables
n <- nrow(hihi) #number of subjects
matrix(data=1, nrow=n) %*% colMeans(hihi)
center_matrix(hihi)
center_matrix
M_mean <- matrix(data=1, nrow=n) %*% colMeans(hihi)
center_matrix = function(matrix){
k <- ncol(matrix) #number of variables
n <- nrow(matrix) #number of subjects
#create means for each column
M_mean <- matrix(data=1, nrow=n) %*% colMeans(matrix)
#creates a difference matrix
D <- matrix - M_mean
return(D)
}
hihi = center_matrix(hihi)
n_by_n = (1/n)*as.matrix(hihi)%*%t(as.matrix(hihi))
dim(n_by_n)
eigen(n_by_n)$vectors
View(ci)
B = eigen(C)$vectors
eigen(C)$values
ci = hihi%*%B
View(ci)
n_by_n%*%ci == eigen(C)$values *ci
n_by_n
C%*%B == eigen(C)$values * B
eigen(C)$values
eigen(C)
View(t(hihi)%*%hihi%*%B)
View(hihi)
View(t(hihi)%*%hihi%*%eigen(cov(hihi))$vectors)
View(eigen(cov(hihi))$vectors)
dim(cov(hihi))
View(eigen(cov(hihi))$vectors * eigen(cov(hihi))$values)
View(eigen(cov(hihi))$vectors * cov(hihi))
View(cov(hihi) %*% eigen(cov(hihi))$vectors)
View(eigen(cov(hihi))$values %*% eigen(cov(hihi))$vectors)
View(eigen(cov(hihi))$values * eigen(cov(hihi))$vectors)
-3.578763e+03 == -3578.763
lambda = eigen(cov(hihi))$values
B = eigen(cov(hihi))$vectors
S = cov(hihi)
n_by_n
ci = hihi %*% B
View(n_by_n%*%ci)
View(lambda %*% ci)
View(lambda * ci)
n_by_n = (1/n)*as.matrix(hihi)%*%t(as.matrix(hihi))
View(n_by_n%*%ci)
eigen(n_by_n)$vectors
View(n_by_n%*%eigen(n_by_n)$vectors)
lambda*eigen(n_by_n)$vectors
dim(lambda)
lambda
View(lambda * t(hihi %*% ci))
View(lambda * t(hihi) %*% ci)
View(S %*% t(hihi) %*% ci)
S %*% B == lambda*B
S %*% eigen(S)$vectors == lambda*eigen(S)$vectors
S %*% eigen(S)$vectors == eigen(S)$values*eigen(S)$vectors
S %*% eigen(S)$vectors[1,1]
S %*% eigen(S)$vectors[1]
View(S %*% eigen(S)$vectors)
View(eigen(S)$values*eigen(S)$vectors)
S %*% eigen(S)$vectors == eigen(S)$values*eigen(S)$vectors
View(n_by_n%*% t(hihi) %*% hihi %*% eigen(S)$vectors)
View(n_by_n %*% hihi %*% eigen(S)$vectors)
View(eigen(S)$values %*% hihi %*% eigen(S)$vectors)
View(eigen(S)$values * hihi %*% eigen(S)$vectors)
View((1/32) * hihi %*% t(hihi) %*% hihi %*% eigen(S)$vectors)
View((1/32) * hihi %*% t(hihi))
ci == hihi %*% eigen(S)$vectors
head(n_by_n%*%ci)
View(n_by_n%*%ci)
View(eigen(S)$values * ci)
3.669843e+05
