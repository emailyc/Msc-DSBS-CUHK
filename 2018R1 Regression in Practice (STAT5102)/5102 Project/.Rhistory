## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
## remove upper triangle of correlation matrix
if(removeTriangle[1]=="upper"){
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove lower triangle of correlation matrix
else if(removeTriangle[1]=="lower"){
Rnew <- as.matrix(Rnew)
Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove last column and return the correlation matrix
Rnew <- cbind(Rnew[1:length(Rnew)-1])
if (result[1]=="none") return(Rnew)
else{
if(result[1]=="html") print(xtable::xtable(Rnew), type="html")
else print(xtable::xtable(Rnew), type="latex")
}
}
mortality_names_index = grep("Mortality$", colnames(world_bank))
mortality_names <- colnames(world_bank)[mortality_names_index]
#cor(world_bank[mortality_names])
corstars(world_bank[mortality_names], result="html")
inTrain <- createDataPartition(y=world_bank$U5.Mortality, p=0.80, list=FALSE)
train <- world_bank[inTrain,]
test <- world_bank[-inTrain,]
OLS <- lm(data = world_bank, U5.Mortality ~ Infant.Mortality)
summary(OLS)
multiple <- lm(data = world_bank, U5.Mortality ~ .)
summary(multiple)
inTrain <- createDataPartition(y=world_bank$U5.Mortality, p=0.80, list=FALSE)
train <- world_bank[inTrain,]
test <- world_bank[-inTrain,]
OLS <- lm(data = train, U5.Mortality ~ Infant.Mortality)
summary(OLS)
shapiro.test(resid(OLS))
ks.test(resid(OLS), "pnorm", 0, 1)
ad.test(resid(OLS))
multiple <- lm(data = train, U5.Mortality ~ .)
summary(multiple)
anyNA(world_bank)
library("sas7bdat")
library("ggplot2")
library("caret")
library("nortest")
library("reticulate")
library("knitr")
#library("mice")
use_condaenv(condaenv = "stat5102_", required = TRUE)
opts_chunk$set(echo = FALSE,
results = FALSE,
cache=TRUE,
python = reticulate::eng_python)
STAT5102 <- 5102
set.seed(STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
head(world_bank, 5)
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
# hihi = data.frame(world_bank)
#
# init = mice(hihi, maxit=0)
# meth = init$method
# predM = init$predictorMatrix
# predM[, c("U5.Mortality")]=0
mice::mice(data = world_bank, m = 5)
cor(world_bank)
View(cor(world_bank))
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
View(cor(world_bank))
mice(data = world_bank, m = 10, seed = STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
mice(data = world_bank, m = 10, seed = STAT5102)
library("mice")
mice::mice(data = world_bank, m = 10, seed = STAT5102)
library("sas7bdat")
library("ggplot2")
library("caret")
library("nortest")
library("reticulate")
library("knitr")
#library("mice")
use_condaenv(condaenv = "stat5102_", required = TRUE)
opts_chunk$set(echo = FALSE,
results = FALSE,
cache=TRUE,
python = reticulate::eng_python)
STAT5102 <- 5102
set.seed(STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
mice::mice(data = world_bank, m = 10, seed = STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
mice::mice(data = world_bank, m = 10, seed = STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Adjusted.savings..education.expe"] <- NULL
mice::mice(data = world_bank, m = 10, seed = STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
#world_bank["Adjusted.savings..education.expe"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
mice::mice(data = world_bank, m = 10, seed = STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Adjusted.savings..education.expe"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
mice::mice(data = world_bank, m = 10, seed = STAT5102)
library("sas7bdat")
library("ggplot2")
library("caret")
library("nortest")
library("reticulate")
library("knitr")
#library("mice")
use_condaenv(condaenv = "stat5102_", required = TRUE)
opts_chunk$set(echo = FALSE,
results = FALSE,
cache=TRUE,
python = reticulate::eng_python)
STAT5102 <- 5102
set.seed(STAT5102)
library("sas7bdat")
library("ggplot2")
library("caret")
library("nortest")
library("reticulate")
library("knitr")
#library("mice")
# use_condaenv(condaenv = "stat5102_", required = TRUE)
# opts_chunk$set(echo = FALSE,
#                results = FALSE,
#                cache=TRUE,
#                python = reticulate::eng_python)
STAT5102 <- 5102
set.seed(STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
mice::mice(data = world_bank, m = 10, seed = STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Adjusted.savings..education.expe"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
mice::mice(data = world_bank, m = 10, seed = STAT5102)
mice::mice(data = world_bank, m = 10, seed = STAT5102)
hihi = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
library("sas7bdat")
hihi = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
mice::mice(data = hihi, m = 10, seed = STAT5102)
mice::mice(data = hihi, m = 5)
library("sas7bdat")
library("ggplot2")
library("caret")
library("nortest")
library("reticulate")
library("knitr")
library("mice")
# use_condaenv(condaenv = "stat5102_", required = TRUE)
# opts_chunk$set(echo = FALSE,
#                results = FALSE,
#                cache=TRUE,
#                python = reticulate::eng_python)
STAT5102 <- 5102
set.seed(STAT5102)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Adjusted.savings..education.expe"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
mice(data = world_bank, m = 10, seed = STAT5102)
mice(data = world_bank, m = 5)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Adjusted.savings..education.expe"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
mice(data = world_bank, m = 5, method="pmm")
mice(data = world_bank, m = 5, method="cart", seed = STAT5102)
mice(data = world_bank, m = 5, method="cart", seed = STAT5102, printFlag = FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Adjusted.savings..education.expe"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
View(colnames(world_bank))
View(world_bank[,c(30,31)])
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
world_bank["Female.Mortality"] <- NULL
world_bank["ARI.treatment....of.children.und"] <- NULL
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
mice(data = world_bank, m = 5, seed = STAT5102, printFlag = FALSE)
mice(data = world_bank, m = 5, method="cart", seed = STAT5102, printFlag = FALSE)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
View(world_bank)
View(colnames(world_bank))
anyNA(world_bank)
world_bank = read.sas7bdat("project_data.sas7bdat", debug=FALSE)
#Drop the column Year and YearCode
world_bank = world_bank[!names(world_bank) %in% c("Year", "YearCode", "Country.Name", "Country.Code")]
#Age dependency ratio (% of working-age population) includes people who are below 15 or above than 64
#Age dependency ratio, young (% of working-age population) only includes people below 15
#hence the first one includes redundant information
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio....of.worki"] <- "Age.dependency.ratio.old"
colnames(world_bank)[colnames(world_bank)=="Age.dependency.ratio..young....o"] <- "Age.dependency.ratio.young"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..infant..per.1.00"] <- "Infant.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..per.1.0"] <- "U5.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..male..p"] <- "Male.Mortality"
colnames(world_bank)[colnames(world_bank)=="Mortality.rate..under.5..female"] <- "Female.Mortality"
world_bank["Age.dependency.ratio.old"] = world_bank["Age.dependency.ratio.old"] - world_bank["Age.dependency.ratio.young"]
#remove case where Mortality rate, under-5 (per 1,000 live births) is Nan
world_bank = world_bank[!is.na(world_bank$U5.Mortality),]
rownames(world_bank) <- NULL
#remove columns with more than 5% missing
world_bank <- world_bank[,-which(colMeans(is.na(world_bank)) > 0.10)]
rownames(world_bank) <- NULL
#remove rows with more than 5 field missing
world_bank <- world_bank[-which(rowSums(is.na(world_bank)) > 5),]
rownames(world_bank) <- NULL
mice(data = world_bank, m = 5, method="cart", seed = STAT5102, printFlag = FALSE)
anyNA(world_bank)
world_bank_imputed = mice(data = world_bank, m = 5, method="cart", seed = STAT5102, printFlag = FALSE)
world_bank_imputed = mice(data = world_bank, m = 5, method="pmm", seed = STAT5102, printFlag = FALSE)
world_bank_imputed = mice(data = world_bank, m = 5, method="norm.boot", seed = STAT5102, printFlag = FALSE)
world_bank_imputed = mice(data = world_bank, m = 5, method="rf", seed = STAT5102, printFlag = FALSE)
install.packages("randomForest")
world_bank_imputed = mice(data = world_bank, m = 5, method="rf", seed = STAT5102, printFlag = FALSE)
View(world_bank_imputed)
world_bank_imputed
world_bank_imputed <- complete(world_bank_imputed)
View(world_bank_imputed)
world_bank_imputed <- mice(data = world_bank, m = 10, method="rf", seed = STAT5102, printFlag = FALSE)
world_bank_imputed <- complete(world_bank_imputed)
anyNA(world_bank_imputed)
qplot(world_bank$U5.Mortality, geom="histogram", bins = sqrt(nrow(world_bank)))
cormat <- round(cor(world_bank),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
use_condaenv(condaenv = "stat5102_", required = TRUE)
opts_chunk$set(echo = FALSE,
results = FALSE,
cache=TRUE,
python = reticulate::eng_python)
import("matplotlib.plyplot", plt)
import("matplotlib.plyplot", "plt")
import("matplotlib.pyplot", "plt")
import scipy
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(y=Var2, fill=value)) + geom_tile()
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile("Correlation Heat Map")
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) #+ geom_tile("Correlation Heat Map")
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
cormat <- round(cor(world_bank_imputed),2)
melted_cormat <- reshape2::melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) #+ geom_tile()
install.packages("ggcorrplot")
cormat <- round(cor(world_bank_imputed),2)
ggcorrplot(cormat, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
cormat <- round(cor(world_bank_imputed),2)
ggcorrplot::ggcorrplot(cormat, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
View(world_bank)
qplot(world_bank_imputed$U5.Mortality, geom="histogram", bins = sqrt(nrow(world_bank_imputed)))
library("sas7bdat")
library("ggplot2")
library("caret")
library("nortest")
library("reticulate")
library("knitr")
library("mice")
use_condaenv(condaenv = "stat5102_", required = TRUE)
opts_chunk$set(echo = FALSE,
results = FALSE,
cache=TRUE,
python = reticulate::eng_python)
import("scipy")
import("pandas", "pd")
import("numpy", "np")
import("matplotlib.pyplot", "plt")
STAT5102 <- 5102
set.seed(STAT5102)
for i in range(10):
