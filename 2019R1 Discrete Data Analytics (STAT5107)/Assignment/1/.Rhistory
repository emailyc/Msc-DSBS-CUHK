zero = rbinom(10000, 100, 0)
plot(zero)
one = rbinom(10000, 100, 1)
plot(one)
half = rbinom(10000, 100, .5)
plot(half)
n <- 1e4
n <- 1e5
n
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
qplot(rbinom(10000, 100, 0))
yes_count <- 842;
no_count <- 982;
t.test(yes_count - no_count, alternative = "two.sided")
dbinom(yes_count, yes_count + no_count, prob = .5)
qbinom(p = .5, size = yes_count + no_count)
qbinom(p = .5, size = yes_count + no_count, lower.tail = 1)
qbinom(842, size = yes_count + no_count, lower.tail = 1, prob = .5)
qbinom(842/(yes_count + no_count), size = yes_count + no_count, lower.tail = 1, prob = .5)
pbinom(842, size = yes_count + no_count, lower.tail = 1, prob = .5)
pbinom(842, size = yes_count + no_count, lower.tail = 0, prob = .5)
842/910
842/(yes_count + no_count)
binom.test(x = yes_count, n = yes_count + no_count, p = 0.5)
binom.test(x = yes_count, n = yes_count + no_count, p = 0.5, alternative = "two.sided")
yes_count/1824
dbinom(20, 20, .5)
n_better <- 20;
n_trial <- 20;
p_grid <- seq(from=0 , to=1 , length.out=1000);
likelihood <- dbinom( n_better , size = n_trial , prob=p_grid )
qplot(likelihood)
qplot(likelihood,bins = sqrt(1000) )
plot(likelihood)
n_better <- 20;
n_trial <- 20;
n_simulate <- 1e5;
H0 <- 0.5;
simulation_data <- rbinom(n_simulate, size = n_trial, prob = H0);
p_grid <- seq(from=0 , to=1 , length.out=1000);
likelihood <- dbinom(x = n_better, size = n_trial, prob=p_grid )
plot(likelihood)
plot(likelihood, p_grid)
plot(p_grid, likelihood)
ggplot(qplot(x = p_grid, y = likelihood, bin = sqrt(n_simulate)))
ggplot(qplot(x = p_grid, y = likelihood))
plot(p_grid, likelihood, main = "Likelihood Function")
plot(p_grid, likelihood, main = "Likelihood Function: p = 0.5");
plot(p_grid, likelihood, main = "Likelihood Function: p = 0.5");
plot(p_grid, likelihood, main = "Likelihood Function: p = 0.5", type = 'l');
plot(p_grid, likelihood, main = "Likelihood Function: 20 success out of 20 trials", type = 'l');
n_better <- 20;
n_trial <- 20;
n_simulate <- 1e5;
H0 <- 0.5;
simulation_data <- rbinom(n_simulate, size = n_trial, prob = H0);
p_grid <- seq(from=0 , to=1 , length.out=n_simulate);
likelihood <- dbinom(x = n_better, size = n_trial, prob=p_grid);
plot(p_grid, likelihood, main = "Likelihood Function: 20 success out of 20 trials", type = 'l');
p_vec <- seq(0, 1, by = 0.01)
logLik <- sapply(p_vec, FUN = log_likelihood, par_N = 10, data = dat1)
logLik <- sapply(p_vec, FUN = sum(dbinom(x = data, prob = par_p, size = par_N, log = T)), par_N = n_trial, data = simulation_data)
logLik <- sapply(p_vec, FUN = sum(dbinom(x = data, prob = par_p, log = T, size)), size = n_trial, data = simulation_data)
logLik <- sapply(p_vec, FUN = function(data, size, prob) sum(dbinom(x = data, size = size, prob = par_p, log = T)), data = simulation_data, size = n_trial, prob = H0)
logLik <- sapply(p_vec, FUN = function(data, size, prob) sum(dbinom(x = data, size = size, prob = prob, log = T)), data = simulation_data, size = n_trial, prob = H0)
p_vec <- seq(0, 1, by = 1/n_simulate)
logLik <- sapply(p_vec, FUN = function(data, size, prob) sum(dbinom(x = data, size = size, prob = prob, log = T)), data = simulation_data, size = n_trial, prob = H0)
sum(dbinom(x = simulation_data, size = n_simulate, prob = .5, log = T))
logLik <- sapply(p_vec, FUN = function(data, size) sum(dbinom(x = data, size = size, prob = H0, log = T)), data = simulation_data, size = n_trial)
sapply(p_vec, FUN = function(data, size) sum(dbinom(x = data, size = size, prob = H0, log = T)), data = simulation_data, size = n_trial)
sapply(p_vec, FUN = function(data, size) sum(dbinom(x = data, size = size, prob = H0, log = T)), data = simulation_data, size = 10000)
sum(dbinom(x = simulation_data, size = 10000, prob = H0, log = T))
sum(dbinom(x = simulation_data, size = n_trial, prob = H0, log = T))
logLik <- sapply(p_vec, FUN = function(data, size, prob) sum(dbinom(x = data, size = size, prob = H0, log = T)), data = simulation_data, size = n_trial, prob = H0)
sapply(p_vec, FUN = function( size) size,  size = n_trial)
sapply(p_vec, FUN = function(size) size^2,  size = n_trial)
sapply(c(1,2), FUN = function(size) size^2,  size = n_trial)
head(p_vec)
length(p_vec)
p_vec <- seq(0, 1, by = 0.01)
logLik <- sapply(p_vec, FUN = function(data, size, prob) sum(dbinom(x = data, size = size, prob = H0, log = T)), data = simulation_data, size = n_trial, prob = H0)
logLik <- sapply(p_vec, FUN = function(data, size, prob) {sum(dbinom(x = data, size = size, prob = H0, log = T))}, data = simulation_data, size = n_trial, prob = H0)
sum(1:3)
logLik <- sapply(p_vec, FUN = function(data, size, prob) {sum(dbinom(x = data, size = size, prob = prob, log = T))}, data = simulation_data, size = n_trial, prob = H0)
logLik <- sapply(p_vec, FUN = function(_data, _size, _prob) {sum(dbinom(x = _data, size = _size, prob = _prob, log = T))}, data = simulation_data, size = n_trial, prob = H0)
hihi = sapply(p_vec, function(x)x^2, x = 2)
hihi = sapply(p_vec, function(x)x^2, x = 1:5)
p_vec <- seq(0, 1, length.out = n_simulate)
logLik <- sapply(p_vec, FUN = function(data, size, prob) {sum(dbinom(x = data, size = size, prob = prob, log = T))}, data = simulation_data, size = n_trial, prob = H0)
length(p_vec)
logLik <- sapply(p_vec, FUN = function(prob, data, size) {sum(dbinom(x = data, size = size, prob = prob, log = T))}, data = simulation_data, size = n_trial)
n_better <- 20;
n_trial <- 20;
n_simulate <- 1e4;
H0 <- 0.5;
simulation_data <- rbinom(n_simulate, size = n_trial, prob = H0);
p_grid <- seq(from=0 , to=1 , length.out=n_simulate);
likelihood <- dbinom(x = n_better, size = n_trial, prob=p_grid);
plot(p_grid, likelihood, main = "Likelihood Function: 20 success out of 20 trials", type = 'l');
#p_vec <- seq(0, 1, length.out = n_simulate)
logLik <- sapply(p_grid, FUN = function(prob, data, size) {sum(dbinom(x = data, size = size, prob = prob, log = T))}, data = simulation_data, size = n_trial)
n_better <- 20;
n_trial <- 20;
n_simulate <- 1e4;
H0 <- 0.5;
simulation_data <- rbinom(n_simulate, size = n_trial, prob = H0);
p_grid <- seq(from=0 , to=1 , length.out=n_simulate);
likelihood <- dbinom(x = n_better, size = n_trial, prob=p_grid);
plot(p_grid, likelihood, main = "Likelihood Function: 20 success out of 20 trials", type = 'l');
#p_vec <- seq(0, 1, length.out = n_simulate)
logLik <- sapply(p_grid, FUN = function(prob, data, size) {sum(dbinom(x = data, size = size, prob = prob, log = T))}, data = simulation_data, size = n_trial)
par(las = 1, cex.lab = 1.2)
plot(p_vec, logLik, type = "l", xlab = "p", ylab = "log-Likelihood")
par(las = 1, cex.lab = 1.2)
plot(p_grid, logLik, type = "l", xlab = "p", ylab = "log-Likelihood")
imax <- which.max(logLik)
p_MLE <- p_vec[imax]
p_MLE
imax <- which.max(logLik)
p_MLE <- p_vec[imax]
p_MLE
imax <- which.max(logLik)
p_MLE <- p_grid[imax]
p_MLE
z_W <- (pie_hat - H0) / sqrt(pie_hat* (1 - pie_hat) / n_trial)
pie_hat <- n_better/n_trial;
z_W <- (pie_hat - H0) / sqrt(pie_hat* (1 - pie_hat) / n_trial)
z_W
pie_hat - H0
pie_hat* (1 - pie_hat) / n_trial
n_better <- 20;
n_trial <- 20;
n_simulate <- 1e4;
pie_hat <- n_better/n_trial;
p_grid <- seq(from=0 , to=1 , length.out=n_simulate);
simulation_data <- rbinom(n_simulate, size = n_trial, prob = pie_hat);
likelihood <- dbinom(x = n_better, size = n_trial, prob=p_grid);
plot(p_grid, likelihood, main = "Likelihood Function: 20 success out of 20 trials", type = 'l');
likelihood <- dbinom(x = n_better, size = n_trial, prob=p_grid);
plot(p_grid, likelihood, main = "Likelihood Function: 20 success out of 20 trials", type = 'l');
logLik <- sapply(p_grid, FUN = function(prob, data, size) {sum(dbinom(x = data, size = size, prob = prob, log = T))}, data = simulation_data, size = n_trial)
imax <- which.max(logLik)
p_MLE <- p_grid[imax]
p_MLE
n_better <- 20;
n_trial <- 20;
n_simulate <- 1e4;
H0 <- 0.5;
pie_hat <- n_better/n_trial;
z_W <- (pie_hat - H0) / sqrt(pie_hat* (1 - pie_hat) / n_trial)
z_W <- (pie_hat - H0) / sqrt(pie_hat* (1 - H0) / n_trial)
z_W
z_W <- (pie_hat - H0) / sqrt(pie_hat* (1 - H0) / n_trial);
error <- qnorm(0.975)*z_W/sqrt(n_trial)
left <- p_MLE-error
right <- p_MLE+error
left
right
qnorm(0.975)
se <- sqrt(pie_hat* (1 - H0) / n_trial)
z_W <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- p_MLE-error
right <- p_MLE+error
left
right
se <- sqrt(H0* (1 - H0) / n_trial)
z_S <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- p_MLE-error
right <- p_MLE+error
left
right
se <- sqrt(H0* (1 - H0) / n_trial)
z_S <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- pie_hat-error
right <- pie_hat+error
left
right
se <- sqrt(pie_hat* (1 - pie_hat) / n_trial)
se
se <- sqrt(pie_hat* (1 - pie_hat) / n_trial)
z_W <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- p_MLE-error
right <- p_MLE+error
se <- sqrt(pie_hat* (1 - pie_hat) / n_trial)
z_W <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- pie_hat-error
right <- pie_hat+error
leftleft
left
right
se
se <- sqrt(pie_hat * (1 - pie_hat) / n_trial)
z_W <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- pie_hat-error
right <- pie_hat+error
left
se <- sqrt(H0* (1 - H0) / n_trial)
z_S <- (pie_hat - H0) / se;
error <- qnorm(0.975)*se/sqrt(n_trial)
left <- pie_hat-error
right <- pie_hat+error
left
right
z_L <- 2 * (n_better * log(pie_hat/H0) + (n_trial - n_better) * log((1-pie_hat) / (1-H0)));
z_L
n_better * log(pie_hat/H0)
(n_trial - n_better)\
(n_trial - n_better)
1-pie_hat
log(0)
p_MLE
deaths = 0:5
count = c(109, 65, 22, 3, 1, 0)
deaths * count / sum(count)
sum(deaths * count / sum(count))
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- deaths * count / period;
mean
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / period;
mean
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / sum(deaths);
mean
dpois(lambda = .75, x = 2)
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / sum(deaths);
expected <- sapply(count, function(x, lambda)dpois(lambda = lambda), lambda = mean)
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / sum(deaths);
expected <- sapply(count, function(x, lambda)dpois(x, lambda = lambda), lambda = mean)
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / sum(deaths);
expected <- sapply(count, function(x, lambda)dpois(x, lambda = lambda) * sum(deaths), lambda = mean)
expected
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / sum(deaths);
expected <- sapply(count, function(x, lambda)dpois(x, lambda = lambda) * sum(deaths), lambda = mean)
chi_squared <- sum(((deaths - expected)^2)/expected);
chi_squared
tulip <- c(81, 50, 27)
res <- chisq.test(tulip, p = c(1/3, 1/3, 1/3))
res
chisq.test(deaths, p = dpois(count, lambda = mean))
dpois(count, lambda = mean)
sum(dpois(count, lambda = mean))
pchisq(c2.94, df = 1)
pchisq(2.94, df = 1)
pchisq(2.94, df = 1, lower.tail = F)
deaths <- c(109, 65, 22, 3, 1, 0);
count <- 0:5;
period <- 20;
mean <- sum(deaths * count) / sum(deaths);
expected <- sapply(count, function(x, lambda)dpois(x, lambda = lambda) * sum(deaths), lambda = mean)
chi_squared <- sum(((deaths - expected)^2)/expected);
df <- length(count) - 1 - 1;
p_value <- pchisq(chi_squared, df = df, lower.tail = F);
p_value
