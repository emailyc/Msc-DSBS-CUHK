log(0)
log(.01)
log(100)
exp(100)
exp(1)
exp(.5)
exp(.1)
exp(.01)
exp(.001)
exp(0)
log(0.01)
x_i <- .0774;
pi_i <- .0079;
pi_i/x_i
pi_i_real <- .0079;
x_i <- .0774;
pi_i_predict <- -.0003 + .0304*x_i;
pi_i_predict/pi_i_real
pi_i_real/pi_i_predict
pi_i_predict
pi = (1 + exp(-(-7.164 + 12.219*x_i)))^-1
pi
-7.164 + 12.219*x_i
exp(-7.164 + 12.219*x_i)
pi_i_real/pi_logit
pi_logit = (1 + exp(-(-7.164 + 12.219*x_i)))^-1
pi_i_real/pi_logit
pi_i_real/pi_i_predict
q5table = matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2)
q5table
q5table[1,1]/rowsum(q5table)[1]
rowsum(q5table)
q5table[1,1]/sum(q5table)[1,]
q5table[1,1]/sum(q5table[1,])
q5table[2,1]/sum(q5table[2,])
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
p_table <- prop.table(table, margin = 1);
ptable <- p_table
p_table
c(1,2,3) + c(4,5,6)
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
p_table <- prop.table(table, margin = 1);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011
linear_relation <- function(x, a = alpha, b = beta){a + b*x}
predicted_p <- linear_relation(scores)
predicted_p
alpha
alpha + beta*.5
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
#p_table <- prop.table(table, margin = 1);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011;
linear_relation <- function(x, a = alpha, b = beta){a + b*x};
predicted_p <- linear_relation(scores);
p_table <- matrix(c(1-predicted_p, predicted_p), nrow = 2)
p_table
predicted_p
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
#p_table <- prop.table(table, margin = 1);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011;
linear_relation <- function(x, a = alpha, b = beta){a + b*x};
predicted_p <- linear_relation(scores);
p_table <- matrix(c(1-predicted_p, predicted_p), nrow = 2, byrow = TRUE)
p_table
relative_risk <- predicted_p/predicted_p[0];
relative_risk
predicted_p/predicted_p[0]
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
#p_table <- prop.table(table, margin = 1);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011;
linear_relation <- function(x, a = alpha, b = beta){a + b*x};
predicted_p <- linear_relation(scores);
relative_risk <- predicted_p/predicted_p[0];
relative_risk
predicted_p/predicted_p
predicted_p/predicted_p[1]
p_table <- prop.table(table, margin = 2);
p_table
fitting <- matrix(c(p_table[,2], predicted_p), byrow = TRUE);
fitting
fitting <- matrix(c(p_table[,2], predicted_p), byrow = TRUE, nrow = 2);
predicted_p
p_table
p_table[,2]
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
p_table <- prop.table(table, margin = 2);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011;
linear_relation <- function(x, a = alpha, b = beta){a + b*x};
predicted_p <- linear_relation(scores);
relative_risk <- predicted_p/predicted_p[1];
fitting <- matrix(c(p_table[2,], predicted_p), byrow = TRUE, nrow = 2);
fitting
fitting <- matrix(c(p_table[2,], predicted_p), byrow = TRUE, nrow = 2, dimnames = c(c("True Proportion", "Fitted Proportion"), c("0", "<1", "1-2", "3-5", ">=6")));
fitting <- matrix(c(p_table[2,], predicted_p),
byrow = TRUE,
nrow = 2, dimnames = list(
c("True Proportion", "Fitted Proportion"),
c("0", "<1", "1-2", "3-5", ">=6")));
fitting
qplot(fittingp[2,], fitting[1,])
ggplot2::qplot(fittingp[2,], fitting[1,])
ggplot2::qplot(fitting[2,], fitting[1,])
ggplot2::qplot(fitting[2,], fitting[1,]) + ggplot2::geom_abline()
library("ggplot2")
as.data.frame(fitting)
hihi = as.data.frame(fitting)
fitting.T
hihi = as.data.frame(t(fitting))
hihi
ggplot(data = as.data.frame(t(fitting)), aes(x = `True Proportion`, y = `Fitted Proportion`)) +
geom_abline()
ggplot(data = as.data.frame(t(fitting)), aes(x = `True Proportion`, y = `Fitted Proportion`)) +
geom_abline()
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_abline(data = )
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_abline(data = )
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_abline()
plot(t_fitting)
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4)
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
p_table <- prop.table(table, margin = 2);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011;
linear_relation <- function(x, a = alpha, b = beta){a + b*x};
predicted_p <- linear_relation(scores);
relative_risk <- predicted_p/predicted_p[1];
fitting <- matrix(c(p_table[2,], predicted_p),
byrow = TRUE,
nrow = 2, dimnames = list(
c("True_Proportion", "Fitted_Proportion"),
c("0", "<1", "1-2", "3-5", ">=6")));
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4)
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=1)
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=2)
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=3)
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=5)
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=6)
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4)
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) + geom_abline()
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_abline() +
scale_x_continuous(breaks = True_Proportion, labels = True_Proportion) ;
table <- matrix(c(17066, 48, 14464, 38, 788, 5, 126, 1, 37, 1), 2);
p_table <- prop.table(table, margin = 2);
scores <- c(0, .5, 1.5, 4.0, 7.0);
alpha <- .0025;
beta <- .0011;
linear_relation <- function(x, a = alpha, b = beta){a + b*x};
predicted_p <- linear_relation(scores);
relative_risk <- predicted_p/predicted_p[1];
fitting <- matrix(c(p_table[2,], predicted_p),
byrow = TRUE,
nrow = 2, dimnames = list(
c("True_Proportion", "Fitted_Proportion"),
c("0", "<1", "1-2", "3-5", ">=6")));
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_abline() +
scale_x_continuous(breaks = True_Proportion, labels = True_Proportion) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_abline() +
scale_x_continuous(breaks = t_fitting$True_Proportion, labels = t_fitting$True_Proportion) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_abline() scale_x_continuous(breaks = t_fitting$True_Proportion, labels = t_fitting$True_Proportion) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_abline() #+
#scale_x_continuous(breaks = t_fitting$True_Proportion, labels = t_fitting$True_Proportion) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_smooth() #+
#scale_x_continuous(breaks = t_fitting$True_Proportion, labels = t_fitting$True_Proportion) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
scale_x_continuous(breaks = seq(1, .03, by = .005), labels = seq(1, .03, by = .005)) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
scale_x_continuous(breaks = seq(0, .03, by = .005), labels = seq(0, .03, by = .005)) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_curve() +
scale_x_continuous(breaks = seq(0, .03, by = .005), labels = seq(0, .03, by = .005)) ;
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(shape=4) +
geom_abline() +
scale_x_continuous(breaks = seq(0, .03, by = .005), labels = seq(0, .03, by = .005)) ;
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(size = 5) +
geom_abline() +
scale_x_continuous(breaks = seq(0, .03, by = .005), labels = seq(0, .03, by = .005)) ;
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(size = 2) +
geom_abline() +
scale_x_continuous(breaks = seq(0, .03, by = .005), labels = seq(0, .03, by = .005)) ;
t_fitting$fitting
fitting
mean_se(fitting)
mean_se(fitting, 2)
mean_se(t(fitting))
48/(48+17066)
1/38
relative_risk]
relative_risk
t_fitting = as.data.frame(t(fitting))
ggplot(data = t_fitting, aes(x = True_Proportion, y = Fitted_Proportion)) +
geom_point(size = 2) +
geom_abline() +
scale_x_continuous(breaks = seq(0, .03, by = .005), labels = seq(0, .03, by = .005)) ;
mapply(function(x, a, b){x[]})
relative_risk[2:]
relative_risk[-1]
range(10)
1:10
hihi = function(x, a){array = x[-c(1:a)]; array/array[1]}
mapply(hihi, predicted_p, 1:length(predicted_p))
hihi(predicted_p)
hihi(predicted_p, 1)
hihi(predicted_p, 2)
hihi(predicted_p, 3)
hihi(predicted_p, 4)
hihi = function(x, a){array = x[-c(0:a)]; array/array[1]}
hihi(predicted_p, 4)
hihi(predicted_p, 0)
hihi(predicted_p, 1)
predicted_p[-c(0:0)]
predicted_p
predicted_p[-c(1)]
predicted_p[-c(0)]
hihi = function(x, a){array = x/x[a]; array = array[a:length(array)]}
hihi(predicted_p, 1)
hihi = function(x, a){array = x/x[a]; array[a:length(array)]}
hihi(predicted_p, 1)
hihi(predicted_p, 2)
hihi(predicted_p, 3)
hihi(predicted_p, 4)
get_relative_risk <- function(x, a){array = x/x[a]; array[a:length(array)]};
relative_risk <- mapply(get_relative_risk, predicted_p, 1:length(predicted_p))
relative_risk
get_relative_risk <- function(x, a){array = x/x[a]; array[a:length(array)]};
mapply(get_relative_risk, predicted_p, 1:length(predicted_p))
get_relative_risk(predicted_p, 1)
get_relative_risk(predicted_p, 2)
hihi = Vectorize(get_relative_risk)
hihi(predicted_p, 1:4)
mapply(function(x, y) seq_len(x) + y,
c(a =  1, b = 2, c = 3),  # names from first
c(A = 10, B = 0, C = -10))
mapply(rep, 1, 4:1)
get_relative_risk <- function(x, a){array = x/x[a]; array[a:length(array)]};
relative_risk <- get_relative_risk(predicted_p, 1:length(predicted_p)
get_relative_risk <- function(x, a){array = x/x[a]; array[a:length(array)]};
relative_risk <- get_relative_risk(predicted_p, 1:length(predicted_p))
relative_risk
get_relative_risk(predicted_p, 1:length(predicted_p))
rep(1, 1:4)
lapply(get_relative_risk, predicted_p, 1:4)
predicted_p
lapply(predicted_p, get_relative_risk, 1:4)
mapply(get_relative_risk, predicted_p, 1)
get_relative_risk(predicted_p, 1
)
mapply(get_relative_risk, predicted_p, c(1))
mapply(get_relative_risk, predicted_p, c(1, 2))
get_relative_risk(predicted_p, 1:2)
get_relative_risk <- function(x, a){array = x/x[a]; list(array[a:length(array)])};
mapply(get_relative_risk, predicted_p, 1)
get_relative_risk(predicted_p, 1)
get_relative_risk(predicted_p, 1:2)
sapply(predicted_p, get_relative_risk, 1)
hihi = function(x)2*x
hihi(1)
hihi(c(1:10))
get_relative_risk <- function(x, a){array = x/x[a]; array[a:length(array)]};
get_relative_risk(predicted_p, 1)
get_relative_risk(predicted_p, 5)
list(1:5)
f <- function(x = 1:3, y) c(x, y)
vf <- Vectorize(f, SIMPLIFY = FALSE)
f(1:3, 1:3)
vf(1:3, 1:3)
vf(y = 1:3)
get_relative_risk <- function(x, a){
array = x/x[a];
array[a:length(array)];
};
relative_risk <- get_relative_risk(predicted_p, 1)
relative_risk
